{"version":3,"sources":["../node_modules/react-trend/es/utils/index.js","../node_modules/react-trend/es/helpers/math.helpers.js","../node_modules/react-trend/es/helpers/DOM.helpers.js","../node_modules/react-trend/es/helpers/misc.helpers.js","../node_modules/react-trend/es/components/Trend/Trend.js","../node_modules/react-trend/es/components/Trend/Trend.helpers.js","pages/Pulse.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","normalize","_ref","value","min","max","_ref$scaleMin","scaleMin","undefined","_ref$scaleMax","scaleMax","moveTo","to","from","radius","vector","x","y","Math","sqrt","unitVector","getDistanceBetween","p1","p2","pow","styleTag","generateId","round","random","Trend_extends","propTypes","data","prop_types_default","a","arrayOf","oneOfType","number","shape","isRequired","smooth","bool","autoDraw","autoDrawDuration","autoDrawEasing","string","width","height","padding","gradient","Trend_Trend","_Component","Trend","props","instance","Constructor","TypeError","_classCallCheck","this","_this","self","ReferenceError","_possibleConstructorReturn","trendId","gradientId","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","componentDidMount","_props","lineLength","path","getTotalLength","cssContents","document","querySelector","head","getElementsByTagName","createElement","type","setAttribute","appendChild","createTextNode","injectStyleTag","_ref2","id","duration","easing","generateAutoDrawCss","getDelegatedProps","obj","keys","reduce","acc","_extends3","indexOf","renderGradientDefinition","react_default","x1","y1","x2","y2","slice","reverse","map","c","index","offset","stopColor","render","_this2","_props2","viewBoxWidth","viewBoxHeight","svgWidth","svgHeight","normalizedValues","minX","maxX","minY","maxY","boundariesX","boundariesY","apply","normalizedData","point","Trend_helpers_normalizeDataset","firstPoint","otherPoints","p3","next","prev","isCollinear","distanceFromPrev","distanceFromNext","threshold","radiusForPoint","before","after","join","DOM_helpers_buildSmoothPath","buildLinearPath","viewBox","ref","elem","d","fill","stroke","react","defaultProps","strokeWidth","components_Trend_Trend","Pulse","state","start","end","fetch","response","text","csvData","parse","mappedData","header","body","splice","forEach","row","prices","parseInt","filter","price","push","name","setState","loadData","_this$state","className","React","Component"],"mappings":"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","file":"static/js/4.73fff23d.chunk.js","sourcesContent":["var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexport var range = function range(to) {\n  return [].concat(Array(to).keys());\n};\nexport var pick = function pick(obj, keys) {\n  return keys.reduce(function (acc, key) {\n    var _extends2;\n\n    return _extends({}, acc, (_extends2 = {}, _extends2[key] = obj[key], _extends2));\n  }, {});\n};\nexport var omit = function omit(obj, keys) {\n  return Object.keys(obj).reduce(function (acc, key) {\n    var _extends3;\n\n    if (keys.indexOf(key) !== -1) {\n      return acc;\n    }\n\n    return _extends({}, acc, (_extends3 = {}, _extends3[key] = obj[key], _extends3));\n  }, {});\n};","/* eslint-disable no-restricted-properties */\n\n/** normalize\n * This lets us translate a value from one scale to another.\n *\n * @param {Number} value - Our initial value to translate\n * @param {Number} min - the current minimum value possible\n * @param {Number} max - the current maximum value possible\n * @param {Number} scaleMin - the min value of the scale we're translating to\n * @param {Number} scaleMax - the max value of the scale we're translating to\n *\n * @returns {Number} the value on its new scale\n */\nexport var normalize = function normalize(_ref) {\n  var value = _ref.value,\n      min = _ref.min,\n      max = _ref.max,\n      _ref$scaleMin = _ref.scaleMin,\n      scaleMin = _ref$scaleMin === undefined ? 0 : _ref$scaleMin,\n      _ref$scaleMax = _ref.scaleMax,\n      scaleMax = _ref$scaleMax === undefined ? 1 : _ref$scaleMax; // If the `min` and `max` are the same value, it means our dataset is flat.\n  // For now, let's assume that flat data should be aligned to the bottom.\n\n  if (min === max) {\n    return scaleMin;\n  }\n\n  return scaleMin + (value - min) * (scaleMax - scaleMin) / (max - min);\n};\n/** moveTo\n * the coordinate that lies at a midpoint between 2 lines, based on the radius\n *\n * @param {Object} to - Our initial point\n * @param {Number} to.x - The x value of our initial point\n * @param {Number} to.y - The y value of our initial point\n * @param {Object} from - Our final point\n * @param {Number} from.x - The x value of our final point\n * @param {Number} from.y - The y value of our final point\n * @param {Number} radius - The distance away from the final point\n *\n * @returns {Object} an object holding the x/y coordinates of the midpoint.\n */\n\nexport var moveTo = function moveTo(to, from, radius) {\n  var vector = {\n    x: to.x - from.x,\n    y: to.y - from.y\n  };\n  var length = Math.sqrt(vector.x * vector.x + vector.y * vector.y);\n  var unitVector = {\n    x: vector.x / length,\n    y: vector.y / length\n  };\n  return {\n    x: from.x + unitVector.x * radius,\n    y: from.y + unitVector.y * radius\n  };\n};\n/** getDistanceBetween\n * Simple formula derived from pythagoras to calculate the distance between\n * 2 points on a plane.\n *\n * @param {Object} p1 - Our initial point\n * @param {Number} p1.x - The x value of our initial point\n * @param {Number} p1.y - The y value of our initial point\n * @param {Object} p2 - Our final point\n * @param {Number} p2.x - The x value of our final point\n * @param {Number} p2.y - The y value of our final point\n *\n * @returns {Number} the distance between the points.\n */\n\nexport var getDistanceBetween = function getDistanceBetween(p1, p2) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n};\n/** checkForCollinearPoints\n * Figure out if the midpoint fits perfectly on a line between the two others.\n *\n * @param {Object} p1 - Our initial point\n * @param {Number} p1.x - The x value of our initial point\n * @param {Number} p1.y - The y value of our initial point\n * @param {Object} p2 - Our mid-point\n * @param {Number} p2.x - The x value of our mid-point\n * @param {Number} p2.y - The y value of our mid-point\n * @param {Object} p3 - Our final point\n * @param {Number} p3.x - The x value of our final point\n * @param {Number} p3.y - The y value of our final point\n\n * @returns {Boolean} whether or not p2 sits on the line between p1 and p3.\n */\n\nexport var checkForCollinearPoints = function checkForCollinearPoints(p1, p2, p3) {\n  return (p1.y - p2.y) * (p1.x - p3.x) === (p1.y - p3.y) * (p1.x - p2.x);\n};","import { moveTo, getDistanceBetween, checkForCollinearPoints } from './math.helpers';\nexport var buildLinearPath = function buildLinearPath(data) {\n  return data.reduce(function (path, _ref, index) {\n    var x = _ref.x,\n        y = _ref.y; // The very first instruction needs to be a \"move\".\n    // The rest will be a \"line\".\n\n    var isFirstInstruction = index === 0;\n    var instruction = isFirstInstruction ? 'M' : 'L';\n    return '' + path + instruction + ' ' + x + ',' + y + '\\n';\n  }, '');\n};\nexport var buildSmoothPath = function buildSmoothPath(data, _ref2) {\n  var radius = _ref2.radius;\n  var firstPoint = data[0],\n      otherPoints = data.slice(1);\n  return otherPoints.reduce(function (path, point, index) {\n    var next = otherPoints[index + 1];\n    var prev = otherPoints[index - 1] || firstPoint;\n    var isCollinear = next && checkForCollinearPoints(prev, point, next);\n\n    if (!next || isCollinear) {\n      // The very last line in the sequence can just be a regular line.\n      return path + '\\nL ' + point.x + ',' + point.y;\n    }\n\n    var distanceFromPrev = getDistanceBetween(prev, point);\n    var distanceFromNext = getDistanceBetween(next, point);\n    var threshold = Math.min(distanceFromPrev, distanceFromNext);\n    var isTooCloseForRadius = threshold / 2 < radius;\n    var radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius;\n    var before = moveTo(prev, point, radiusForPoint);\n    var after = moveTo(next, point, radiusForPoint);\n    return [path, 'L ' + before.x + ',' + before.y, 'S ' + point.x + ',' + point.y + ' ' + after.x + ',' + after.y].join('\\n');\n  }, 'M ' + firstPoint.x + ',' + firstPoint.y);\n}; // Taken from Khan Academy's Aphrodite\n// https://github.com/Khan/aphrodite/blob/master/src/inject.js\n\nvar styleTag = void 0;\nexport var injectStyleTag = function injectStyleTag(cssContents) {\n  if (styleTag == null) {\n    // Try to find a style tag with the `data-react-trend` attribute first.\n    styleTag = document.querySelector('style[data-react-trend]'); // If that doesn't work, generate a new style tag.\n\n    if (styleTag == null) {\n      // Taken from\n      // http://stackoverflow.com/questions/524696/how-to-create-a-style-tag-with-javascript\n      var head = document.head || document.getElementsByTagName('head')[0];\n      styleTag = document.createElement('style');\n      styleTag.type = 'text/css';\n      styleTag.setAttribute('data-react-trend', '');\n      head.appendChild(styleTag);\n    }\n  }\n\n  styleTag.appendChild(document.createTextNode(cssContents));\n};","// eslint-disable-next-line no-restricted-properties\nexport var generateId = function generateId() {\n  return Math.round(Math.random() * Math.pow(10, 16));\n};","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { omit } from '../../utils';\nimport { buildSmoothPath, buildLinearPath, injectStyleTag } from '../../helpers/DOM.helpers';\nimport { normalize } from '../../helpers/math.helpers';\nimport { generateId } from '../../helpers/misc.helpers';\nimport { normalizeDataset, generateAutoDrawCss } from './Trend.helpers';\nvar propTypes = {\n  data: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    value: PropTypes.number\n  })]).isRequired).isRequired,\n  smooth: PropTypes.bool,\n  autoDraw: PropTypes.bool,\n  autoDrawDuration: PropTypes.number,\n  autoDrawEasing: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  padding: PropTypes.number,\n  radius: PropTypes.number,\n  gradient: PropTypes.arrayOf(PropTypes.string)\n};\nvar defaultProps = {\n  radius: 10,\n  stroke: 'black',\n  padding: 8,\n  strokeWidth: 1,\n  autoDraw: false,\n  autoDrawDuration: 2000,\n  autoDrawEasing: 'ease'\n};\n\nvar Trend = function (_Component) {\n  _inherits(Trend, _Component);\n\n  function Trend(props) {\n    _classCallCheck(this, Trend); // Generate a random ID. This is important for distinguishing between\n    // Trend components on a page, so that they can have different keyframe\n    // animations.\n\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.trendId = generateId();\n    _this.gradientId = 'react-trend-vertical-gradient-' + _this.trendId;\n    return _this;\n  }\n\n  Trend.prototype.componentDidMount = function componentDidMount() {\n    var _props = this.props,\n        autoDraw = _props.autoDraw,\n        autoDrawDuration = _props.autoDrawDuration,\n        autoDrawEasing = _props.autoDrawEasing;\n\n    if (autoDraw) {\n      this.lineLength = this.path.getTotalLength();\n      var css = generateAutoDrawCss({\n        id: this.trendId,\n        lineLength: this.lineLength,\n        duration: autoDrawDuration,\n        easing: autoDrawEasing\n      });\n      injectStyleTag(css);\n    }\n  };\n\n  Trend.prototype.getDelegatedProps = function getDelegatedProps() {\n    return omit(this.props, Object.keys(propTypes));\n  };\n\n  Trend.prototype.renderGradientDefinition = function renderGradientDefinition() {\n    var gradient = this.props.gradient;\n    return React.createElement('defs', null, React.createElement('linearGradient', {\n      id: this.gradientId,\n      x1: '0%',\n      y1: '0%',\n      x2: '0%',\n      y2: '100%'\n    }, gradient.slice().reverse().map(function (c, index) {\n      return React.createElement('stop', {\n        key: index,\n        offset: normalize({\n          value: index,\n          min: 0,\n          // If we only supply a single colour, it will try to normalize\n          // between 0 and 0, which will create NaN. By making the `max`\n          // at least 1, we ensure single-color \"gradients\" work.\n          max: gradient.length - 1 || 1\n        }),\n        stopColor: c\n      });\n    })));\n  };\n\n  Trend.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props2 = this.props,\n        data = _props2.data,\n        smooth = _props2.smooth,\n        width = _props2.width,\n        height = _props2.height,\n        padding = _props2.padding,\n        radius = _props2.radius,\n        gradient = _props2.gradient; // We need at least 2 points to draw a graph.\n\n    if (!data || data.length < 2) {\n      return null;\n    } // `data` can either be an array of numbers:\n    // [1, 2, 3]\n    // or, an array of objects containing a value:\n    // [ { value: 1 }, { value: 2 }, { value: 3 }]\n    //\n    // For now, we're just going to convert the second form to the first.\n    // Later on, if/when we support tooltips, we may adjust.\n\n\n    var plainValues = data.map(function (point) {\n      return typeof point === 'number' ? point : point.value;\n    }); // Our viewbox needs to be in absolute units, so we'll default to 300x75\n    // Our SVG can be a %, though; this is what makes it scalable.\n    // By defaulting to percentages, the SVG will grow to fill its parent\n    // container, preserving a 1/4 aspect ratio.\n\n    var viewBoxWidth = width || 300;\n    var viewBoxHeight = height || 75;\n    var svgWidth = width || '100%';\n    var svgHeight = height || '25%';\n    var normalizedValues = normalizeDataset(plainValues, {\n      minX: padding,\n      maxX: viewBoxWidth - padding,\n      // NOTE: Because SVGs are indexed from the top left, but most data is\n      // indexed from the bottom left, we're inverting the Y min/max.\n      minY: viewBoxHeight - padding,\n      maxY: padding\n    });\n    var path = smooth ? buildSmoothPath(normalizedValues, {\n      radius: radius\n    }) : buildLinearPath(normalizedValues);\n    return React.createElement('svg', _extends({\n      width: svgWidth,\n      height: svgHeight,\n      viewBox: '0 0 ' + viewBoxWidth + ' ' + viewBoxHeight\n    }, this.getDelegatedProps()), gradient && this.renderGradientDefinition(), React.createElement('path', {\n      ref: function ref(elem) {\n        _this2.path = elem;\n      },\n      id: 'react-trend-' + this.trendId,\n      d: path,\n      fill: 'none',\n      stroke: gradient ? 'url(#' + this.gradientId + ')' : undefined\n    }));\n  };\n\n  return Trend;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Trend.propTypes = propTypes : void 0;\nTrend.defaultProps = defaultProps;\nexport default Trend;","import { normalize } from '../../helpers/math.helpers';\nexport var normalizeDataset = function normalizeDataset(data, _ref) {\n  var minX = _ref.minX,\n      maxX = _ref.maxX,\n      minY = _ref.minY,\n      maxY = _ref.maxY; // For the X axis, we want to normalize it based on its index in the array.\n  // For the Y axis, we want to normalize it based on the element's value.\n  //\n  // X axis is easy: just evenly-space each item in the array.\n  // For the Y axis, we first need to find the min and max of our array,\n  // and then normalize those values between 0 and 1.\n\n  var boundariesX = {\n    min: 0,\n    max: data.length - 1\n  };\n  var boundariesY = {\n    min: Math.min.apply(Math, data),\n    max: Math.max.apply(Math, data)\n  };\n  var normalizedData = data.map(function (point, index) {\n    return {\n      x: normalize({\n        value: index,\n        min: boundariesX.min,\n        max: boundariesX.max,\n        scaleMin: minX,\n        scaleMax: maxX\n      }),\n      y: normalize({\n        value: point,\n        min: boundariesY.min,\n        max: boundariesY.max,\n        scaleMin: minY,\n        scaleMax: maxY\n      })\n    };\n  }); // According to the SVG spec, paths with a height/width of `0` can't have\n  // linear gradients applied. This means that our lines are invisible when\n  // the dataset is flat (eg. [0, 0, 0, 0]).\n  //\n  // The hacky solution is to apply a very slight offset to the first point of\n  // the dataset. As ugly as it is, it's the best solution we can find (there\n  // are ways within the SVG spec of changing it, but not without causing\n  // breaking changes).\n\n  if (boundariesY.min === boundariesY.max) {\n    // eslint-disable-next-line no-param-reassign\n    normalizedData[0].y += 0.0001;\n  }\n\n  return normalizedData;\n};\nexport var generateAutoDrawCss = function generateAutoDrawCss(_ref2) {\n  var id = _ref2.id,\n      lineLength = _ref2.lineLength,\n      duration = _ref2.duration,\n      easing = _ref2.easing; // We do the animation using the dash array/offset trick\n  // https://css-tricks.com/svg-line-animation-works/\n\n  var autodrawKeyframeAnimation = '\\n    @keyframes react-trend-autodraw-' + id + ' {\\n      0% {\\n        stroke-dasharray: ' + lineLength + ';\\n        stroke-dashoffset: ' + lineLength + '\\n      }\\n      100% {\\n        stroke-dasharray: ' + lineLength + ';\\n        stroke-dashoffset: 0;\\n      }\\n      100% {\\n        stroke-dashoffset: \\'\\';\\n        stroke-dasharray: \\'\\';\\n      }\\n    }\\n  '; // One unfortunate side-effect of the auto-draw is that the line is\n  // actually 1 big dash, the same length as the line itself. If the\n  // line length changes (eg. radius change, new data), that dash won't\n  // be the same length anymore. We can fix that by removing those\n  // properties once the auto-draw is completed.\n\n  var cleanupKeyframeAnimation = '\\n    @keyframes react-trend-autodraw-cleanup-' + id + ' {\\n      to {\\n        stroke-dasharray: \\'\\';\\n        stroke-dashoffset: \\'\\';\\n      }\\n    }\\n  ';\n  return '\\n    ' + autodrawKeyframeAnimation + '\\n\\n    ' + cleanupKeyframeAnimation + '\\n\\n    #react-trend-' + id + ' {\\n      animation:\\n        react-trend-autodraw-' + id + ' ' + duration + 'ms ' + easing + ',\\n        react-trend-autodraw-cleanup-' + id + ' 1ms ' + duration + 'ms\\n      ;\\n    }\\n  ';\n};","import React from 'react';\nimport Trend from 'react-trend';\nimport parse from 'csv-parse/lib/es5/sync';\n\nclass Pulse extends React.Component {\n\n  state = {\n    data: [],\n    start: '',\n    end: '',\n  }\n\n  async loadData() {\n    const response = await fetch('https://raw.githubusercontent.com/brokalys/data/master/data/apartment/sell-monthly-riga.csv');\n    const csvData = await response.text();\n    const data = parse(csvData);\n\n    const mappedData = [];\n    const header = data[0];\n    const body = data.splice(1);\n    const start = body[0][0];\n    const end = body[body.length - 1][1];\n\n    header.forEach((row, index) => {\n      if (index <= 1) {\n        return;\n      }\n\n      const prices = body.map((row) => parseInt(row[index], 10)).filter((price) => price > 0);\n\n      if (prices.length === 0) {\n        return;\n      }\n\n      mappedData.push({\n        name: row === 'Rīga' ? 'Vidējais rādītājs Rīgā' : row,\n        data: prices,\n      });\n    });\n\n    this.setState({\n      start,\n      end,\n      data: mappedData,\n    });\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    const { data, start, end } = this.state;\n\n    return (\n      <div className=\"container\">\n        <h1>Nekustamā īpašuma pulss Rīgā</h1>\n        <h2>{start} - {end}</h2>\n        <hr />\n\n        {data.map((row) => {\n          return (\n            <div key={row.name}>\n              <h3>{row.name}</h3>\n              <Trend data={row.data} autoDraw gradient={['#0FF', '#F0F', '#FF0']} smooth />\n              <hr />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n}\n\nexport default Pulse;\n"],"sourceRoot":""}