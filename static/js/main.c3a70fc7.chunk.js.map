{"version":3,"sources":["components/Statistics/MeanPriceInFilterLocation/MeanPriceInFilterLocation.module.css","App.module.css","components/Navigation/Navigation.module.css","components/PropertyPriceChart/PropertyPriceChart.module.css","pages/Home/Home.module.css","components/Map/components/BuildingPolygons.module.css","containers/SplitPaneRight/SplitPaneRight.module.css","pages/Building/components/BuildingTable.module.css","components/FilterToolbar/FilterToolbar.module.css","apollo-client.js","components/Navigation/Navigation.jsx","components/Navigation/index.js","store/actionTypes.js","store/actions.js","hooks/api/use-region-buildings.js","store/selectors/map.js","store/selectors/neighborhood.js","store/selectors/router.js","components/Map/components/BuildingPolygons.jsx","components/Map/components/HighlightedPolygon.jsx","components/Map/Map.jsx","hooks/use-map-center.js","components/Map/index.js","containers/SplitPaneRight/SplitPaneRight.jsx","containers/SplitPaneRight/index.js","hooks/use-suspended-query.js","hooks/api/use-active-building.js","pages/Building/components/BuildingStats.jsx","pages/Building/components/BuildingTable.jsx","pages/Building/components/BuildingToolbar.jsx","pages/Building/components/Header.jsx","pages/Building/Building.jsx","pages/Building/index.js","bugsnag.js","components/FilterToolbar/FilterToolbar.jsx","components/FilterToolbar/index.js","hooks/api/use-property-price-chart-data.js","components/PropertyPriceChart/PropertyPriceChart.jsx","components/PropertyPriceChart/index.js","components/Statistics/MeanPriceInFilterLocation/MeanPriceInFilterLocation.jsx","hooks/api/use-property-price-mean-data.js","components/Statistics/MeanPriceInFilterLocation/index.js","components/Statistics/RentalYieldInFilterLocation/RentalYieldInFilterLocation.jsx","hooks/api/use-rental-yield.js","components/Statistics/RentalYieldInFilterLocation/index.js","pages/Home/index.js","pages/Home/Home.jsx","App.jsx","store/reducers/map.js","store/reducers/neighborhood.js","store/reducers/index.js","store/sagas/go-home.js","store/sagas/map-center-on-neighborhood.js","store/sagas/set-active-building.js","store/sagas/set-map-center.js","store/sagas/update-map-bounds.js","store/sagas/index.js","store/index.js","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["module","exports","debounceLink","DebounceLink","httpLink","HttpLink","uri","process","restLink","RestLink","client","ApolloClient","cache","InMemoryCache","link","ApolloLink","from","Navigation","Menu","secondary","Header","src","alt","height","Item","position","Popup","content","inverted","trigger","href","target","rel","className","styles","notificationLink","data-testid","Icon","name","shake","fitted","Button","primary","animated","onClick","window","location","Content","visible","hidden","CLICK_ON_BUILDING","RETURN_TO_HOME_CLICKED","MAP_BOUNDS_CHANGED","MAP_PROJECTION_CHANGED","SET_SELECTED_NEIGHBORHOOD","SET_NEIGHBORHOOD_FILTERS","mapProjectionChanged","payload","type","setNeighborhoodFilters","GET_BUILDINGS_AND_PROPERTIES","gql","selectMap","state","map","mapRegionSelector","createSelector","bounds","ne","lat","lng","join","nw","sw","se","convertBoundsToRegionString","selectNeighborhood","neighborhood","highlightedRegionMap","riga","features","reduce","carry","row","properties","id","geometry","coordinates","selectedNeighborhoodSelector","selected","region","neighborhoodFilterSelector","filters","locationSelector","router","locationPathnameSelector","pathname","locationSearchSelector","search","locationQuerySelector","query","Polygons","props","dispatch","useDispatch","buildingId","useParams","useQuery","variables","context","debounceKey","loading","data","buildings","useRegionBuildings","onBuildingClick","building","Segment","circular","loadingIndicator","Dimmer","active","Loader","filter","results","length","paths","split","parseFloat","options","toString","strokeColor","fillColor","BuildingPolygons","useSelector","React","memo","polygon","fillOpacity","containerStyle","width","Map","center","zoom","useMemo","parseInt","useMapCenter","useState","initialCenter","setMap","useLoadScript","googleMapsApiKey","isLoaded","loadError","onBoundsChanged","useCallback","onProjectionChanged","actions","zoomControlOptions","google","maps","ControlPosition","RIGHT_TOP","rotateControl","scaleControl","streetViewControl","panControl","fullscreenControl","mapContainerStyle","onLoad","onDragEnd","onZoomChanged","renderMap","SplitPaneRight","container","suspend","promise","response","status","suspender","then","res","err","read","useSuspendableQuery","result","Promise","resolve","GET_SINGLE_BUILDING","calcAvg","nums","num","BuildingStats","min","total","Math","prices","sqm","avg","max","Grid","columns","textAlign","divided","Row","Column","Statistic","size","Label","Value","toLocaleString","RENT_TYPE_SUFFIX","yearly","monthly","weekly","daily","hourly","accessor","Cell","original","price","rent_type","value","round","moment","format","getCellTextAlign","cell","includes","column","usePageSize","segment","initialPageIndex","updatePageIndex","event","activePage","push","BuildingTable","useTable","initialState","sortBy","desc","pageSize","pageIndex","hiddenColumns","useFilters","useSortBy","usePagination","setFilter","headerGroups","rows","page","prepareRow","pageCount","gotoPage","onPageChange","useEffect","Object","entries","forEach","price_per_sqm","hasResults","stats","Table","singleLine","sortable","headerGroup","getHeaderGroupProps","headers","HeaderCell","getHeaderProps","getSortByToggleProps","sorted","isSorted","isSortedDesc","render","Body","getRowProps","cells","getCellProps","colSpan","Footer","Pagination","boundaryRange","siblingRange","totalPages","categoryOptions","text","typeOptions","rentTypeOptions","BuildingToolbar","onChange","category","setCategory","setType","rentType","setRentType","undefined","Dropdown","placeholder","clearable","selection","fluid","onReturnClick","icon","labelPosition","onFiltersChange","Message","info","activeBuilding","Number","useActiveBuilding","warning","Building","setFilters","fallback","negative","Suspense","basic","count","Bugsnag","start","releaseStage","enabledReleaseStages","apiKey","plugins","BugsnagPluginReact","collectUserIp","locationOptions","priceTypeOptions","FilterToolbar","all","regexp","RegExp","transliterate","replace","test","usePriceData","typeOverride","pollInterval","setPollInterval","location_classificator","filterStr","encodeURIComponent","JSON","stringify","loadingResults","PropertyPriceChart","priceType","pricePerSqm","x","start_datetime","substr","y","mean","maxPrice","Price","minimumFractionDigits","margin","top","right","bottom","left","xScale","precision","xFormat","yScale","stacked","sliceTooltip","slice","tooltip","points","point","serieId","yFormatted","mode","median","axisBottom","tickValues","tickRotation","enablePoints","curve","useMesh","enableSlices","layers","AreaLayer","series","areaGenerator","innerHeight","area","d","y0","y1","curveMonotoneX","defs","background","color","lineWidth","spacing","rotation","fill","stroke","strokeWidth","PropertyPriceChartContainer","onError","notify","Description","MeanPriceInFilterLocation","change","group","mom","yoy","momChange","yoyChange","statisticAddon","isFinite","textGreen","textRed","toFixed","MeanPriceInFilterLocationContainer","RentalYieldInFilterLocation","rentData","sellData","useRentalYield","RentalYieldInFilterLocationContainer","Home","locationName","find","as","highlightedText","tablet","computer","largeScreen","widescreen","Group","verticalAlign","stretched","header","App","Container","githubCorner","direction","path","grid","leftPanel","rightPanel","mapReducer","action","getBounds","getSouthWest","getNorthEast","neighborhoodReducer","createRootReducer","history","combineReducers","connectRouter","goHome","saga","select","parts","put","takeLatest","setHighlightedRegion","getCenterCoords","arr","coords","takeEvery","setActiveBuilding","url","String","setMapCenter","getZoom","currentPath","newPath","updateMapBounds","rootSaga","mapCenterOnNeighborhood","createHashHistory","hashType","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","run","Boolean","hostname","match","ErrorBoundary","getPlugin","createErrorBoundary","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c3a70fc7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticAddon\":\"MeanPriceInFilterLocation_statisticAddon__ZZijL\",\"textGreen\":\"MeanPriceInFilterLocation_textGreen__1TxZ3\",\"textRed\":\"MeanPriceInFilterLocation_textRed__2oGI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"grid\":\"App_grid__3DnSg\",\"leftPanel\":\"App_leftPanel__3Hl9k\",\"rightPanel\":\"App_rightPanel__kN-EW\",\"githubCorner\":\"App_githubCorner__3BLKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shake\":\"Navigation_shake__1loJY\",\"bell-shake\":\"Navigation_bell-shake__28FvC\",\"notificationLink\":\"Navigation_notificationLink__dwBb-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PropertyPriceChart_container__b6m2Q\",\"tooltip\":\"PropertyPriceChart_tooltip__iGhsd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Home_content__sgIvw\",\"highlightedText\":\"Home_highlightedText__3zLCN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingIndicator\":\"BuildingPolygons_loadingIndicator__12R8e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SplitPaneRight_container__x3kzx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"BuildingTable_stats__3-b6T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterToolbar_container__3xqZF\"};","import {\n  ApolloClient,\n  ApolloLink,\n  HttpLink,\n  InMemoryCache,\n} from '@apollo/client';\nimport DebounceLink from 'apollo-link-debounce';\nimport { RestLink } from 'apollo-link-rest';\n\nconst debounceLink = new DebounceLink(3000);\nconst httpLink = new HttpLink({\n  uri: process.env.REACT_APP_API_ENDPOINT,\n});\nconst restLink = new RestLink({\n  uri: process.env.REACT_APP_STATIC_API_ENDPOINT,\n});\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: ApolloLink.from([debounceLink, restLink, httpLink]),\n});\n\nexport default client;\n","import React from 'react';\nimport { Button, Icon, Menu, Popup } from 'semantic-ui-react';\nimport styles from './Navigation.module.css';\n\nfunction Navigation() {\n  function onFeedbackClick() {\n    window.location.href = 'mailto:matiss@brokalys.com?subject=Feedback';\n  }\n\n  return (\n    <Menu secondary>\n      <Menu.Header>\n        <img src=\"https://brokalys.com/favicon.png\" alt=\"logo\" height=\"40px\" />\n      </Menu.Header>\n\n      <Menu.Item position=\"right\">\n        <Popup\n          content=\"Sign up for instant notifications about classifieds matching your parameters\"\n          inverted\n          position=\"bottom right\"\n          trigger={\n            <a\n              href=\"https://pinger.brokalys.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className={styles.notificationLink}\n              data-testid=\"pinger-button\"\n            >\n              <Icon name=\"bell outline\" className={styles.shake} />\n            </a>\n          }\n        />\n      </Menu.Item>\n\n      {/*<Menu.Item fitted>\n        <Button basic animated=\"vertical\">\n          <Button.Content visible>Compare</Button.Content>\n          <Button.Content hidden>\n            <Icon name=\"crosshairs\" />\n          </Button.Content>\n        </Button>\n      </Menu.Item>*/}\n\n      <Menu.Item fitted>\n        <Button primary animated=\"vertical\" onClick={onFeedbackClick}>\n          <Button.Content visible>Give feedback</Button.Content>\n          <Button.Content hidden>\n            <Icon name=\"mail\" />\n          </Button.Content>\n        </Button>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default Navigation;\n","import Navigation from './Navigation';\n\nexport default Navigation;\n","// Building\nexport const CLICK_ON_BUILDING = 'CLICK_ON_BUILDING';\nexport const RETURN_TO_HOME_CLICKED = 'RETURN_TO_HOME_CLICKED';\n\n// Map\nexport const MAP_BOUNDS_CHANGED = 'MAP_BOUNDS_CHANGED';\nexport const MAP_PROJECTION_CHANGED = 'MAP_PROJECTION_CHANGED';\n\n// Neighborhood\nexport const SET_SELECTED_NEIGHBORHOOD = 'SET_SELECTED_NEIGHBORHOOD';\nexport const SET_NEIGHBORHOOD_FILTERS = 'SET_NEIGHBORHOOD_FILTERS';\n","import {\n  CLICK_ON_BUILDING,\n  MAP_BOUNDS_CHANGED,\n  MAP_PROJECTION_CHANGED,\n  SET_NEIGHBORHOOD_FILTERS,\n  SET_SELECTED_NEIGHBORHOOD,\n  RETURN_TO_HOME_CLICKED,\n} from './actionTypes';\n\nexport const clickOnBuilding = (payload) => ({\n  type: CLICK_ON_BUILDING,\n  payload,\n});\n\nexport const returnToHomeClicked = () => ({\n  type: RETURN_TO_HOME_CLICKED,\n});\n\nexport const mapBoundsChanged = (payload) => ({\n  type: MAP_BOUNDS_CHANGED,\n  payload,\n});\n\nexport const mapProjectionChanged = (payload) => ({\n  type: MAP_PROJECTION_CHANGED,\n  payload,\n});\n\nexport const setNeighborhoodFilters = (payload) => ({\n  type: SET_NEIGHBORHOOD_FILTERS,\n  payload,\n});\n\nexport const setSelectedNeighborhood = (payload) => ({\n  type: SET_SELECTED_NEIGHBORHOOD,\n  payload,\n});\n","import { gql, useQuery } from '@apollo/client';\n\nconst GET_BUILDINGS_AND_PROPERTIES = gql`\n  query($region: String!) {\n    buildings(bounds: $region) {\n      id\n      bounds\n      properties {\n        results {\n          category\n          type\n          rent_type\n          price\n          price_per_sqm\n          rooms\n          area\n          floor\n          published_at\n        }\n      }\n    }\n  }\n`;\n\nexport default function useRegionBuildings(region) {\n  const { loading, data } = useQuery(GET_BUILDINGS_AND_PROPERTIES, {\n    variables: { region },\n    context: {\n      debounceKey: 'GET_BUILDINGS_AND_PROPERTIES',\n    },\n  });\n  return {\n    loading,\n    data: data?.buildings || [],\n  };\n}\n","import { createSelector } from 'reselect';\n\nconst selectMap = (state) => state.map;\n\nfunction convertBoundsToRegionString(bounds) {\n  if (!bounds.ne) return;\n\n  const parts = [\n    [bounds.ne.lat, bounds.ne.lng].join(' '),\n    [bounds.nw.lat, bounds.nw.lng].join(' '),\n    [bounds.sw.lat, bounds.sw.lng].join(' '),\n    [bounds.se.lat, bounds.se.lng].join(' '),\n    [bounds.ne.lat, bounds.ne.lng].join(' '),\n  ];\n  return parts.join(', ');\n}\n\nexport const mapRegionSelector = createSelector(selectMap, (state) =>\n  convertBoundsToRegionString(state.bounds),\n);\n\nexport const mapBoundsSelector = createSelector(\n  selectMap,\n  (state) => state.bounds,\n);\n","import { riga } from '@brokalys/location-json-schemas';\nimport { createSelector } from 'reselect';\n\nconst selectNeighborhood = (state) => state.neighborhood;\n\nconst highlightedRegionMap = riga.features.reduce(\n  (carry, row) => ({ ...carry, [row.properties.id]: row.geometry.coordinates }),\n  {},\n);\n\nexport const selectedNeighborhoodSelector = createSelector(\n  selectNeighborhood,\n  (state) => ({\n    id: state.selected,\n    region: highlightedRegionMap[state.selected],\n  }),\n);\n\nexport const neighborhoodFilterSelector = createSelector(\n  selectNeighborhood,\n  (state) => state.filters,\n);\n","import { createSelector } from 'reselect';\n\nconst selectRouter = (state) => state.router;\n\nexport const locationSelector = createSelector(\n  selectRouter,\n  (state) => state.location,\n);\n\nexport const locationPathnameSelector = createSelector(\n  locationSelector,\n  (location) => location.pathname,\n);\n\nexport const locationSearchSelector = createSelector(\n  locationSelector,\n  (location) => location.search,\n);\n\nexport const locationQuerySelector = createSelector(\n  locationSelector,\n  (location) => location.query,\n);\n\nexport const querystringParamSelector = (segment) =>\n  createSelector(locationQuerySelector, (query) => query[segment]);\n","import { Polygon } from '@react-google-maps/api';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Dimmer, Loader, Segment } from 'semantic-ui-react';\nimport useRegionBuildings from 'hooks/api/use-region-buildings';\nimport * as actions from 'store/actions';\nimport { mapRegionSelector } from 'store/selectors';\nimport styles from './BuildingPolygons.module.css';\n\nfunction Polygons(props) {\n  const dispatch = useDispatch();\n  const { buildingId } = useParams();\n  const { loading, data: buildings } = useRegionBuildings(props.region);\n\n  const onBuildingClick = (building) => {\n    dispatch(actions.clickOnBuilding(building.id));\n  };\n\n  if (loading) {\n    return (\n      <Segment circular className={styles.loadingIndicator}>\n        <Dimmer active>\n          <Loader />\n        </Dimmer>\n      </Segment>\n    );\n  }\n\n  return buildings\n    .filter(({ properties }) => properties.results.length > 0)\n    .map((building) => (\n      <Polygon\n        key={building.id}\n        onClick={() => onBuildingClick(building)}\n        paths={building.bounds.split(', ').map((row) => {\n          const [lat, lng] = row.split(' ');\n          return { lat: parseFloat(lat), lng: parseFloat(lng) };\n        })}\n        options={\n          buildingId && buildingId === building.id.toString()\n            ? { strokeColor: 'green', fillColor: 'green' }\n            : { strokeColor: 'black', fillColor: 'black' }\n        }\n      />\n    ));\n}\n\nfunction BuildingPolygons() {\n  const region = useSelector(mapRegionSelector);\n\n  if (!region) {\n    return null;\n  }\n\n  // @todo: error handling\n  return <Polygons region={region} />;\n}\n\nexport default React.memo(BuildingPolygons);\n","import { Polygon } from '@react-google-maps/api';\nimport { useSelector } from 'react-redux';\nimport { selectedNeighborhoodSelector } from 'store/selectors';\n\nexport default function BuildingPolygons() {\n  const { region } = useSelector(selectedNeighborhoodSelector);\n\n  return (\n    <Polygon\n      paths={region.map((polygon) =>\n        polygon.map(([lng, lat]) => ({ lng, lat })),\n      )}\n      options={{ strokeColor: 'black', fillColor: 'black', fillOpacity: 0.2 }}\n    />\n  );\n}\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { GoogleMap, useLoadScript } from '@react-google-maps/api';\nimport useMapCenter from 'hooks/use-map-center';\nimport * as actions from 'store/actions';\nimport BuildingPolygons from './components/BuildingPolygons';\nimport HighlightedPolygon from './components/HighlightedPolygon';\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n};\n\nexport const MIN_ZOOM_FOR_BUILDINGS = 17;\nexport const MIN_ZOOM_FOR_HIGHLIGHTED_REGION = 12;\nexport const MAX_ZOOM_FOR_HIGHLIGHTED_REGION = 14;\n\nfunction Map(props) {\n  const center = useMapCenter();\n  const [initialCenter] = useState(center);\n  const [map, setMap] = useState(null);\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_KEY,\n  });\n\n  const dispatch = useDispatch();\n  const onBoundsChanged = useCallback(() => {\n    if (!map) return;\n    dispatch(actions.mapBoundsChanged(map));\n  }, [dispatch, map]);\n  const onProjectionChanged = useCallback(\n    () => dispatch(actions.mapProjectionChanged(map)),\n    [dispatch, map],\n  );\n\n  const renderMap = () => {\n    const options = {\n      zoomControlOptions: {\n        position: window.google.maps.ControlPosition.RIGHT_TOP,\n      },\n      rotateControl: false,\n      scaleControl: false,\n      streetViewControl: false,\n      panControl: false,\n      fullscreenControl: false,\n    };\n\n    return (\n      <GoogleMap\n        options={options}\n        mapContainerStyle={containerStyle}\n        center={initialCenter}\n        zoom={initialCenter.zoom}\n        onLoad={setMap}\n        onProjectionChanged={onProjectionChanged}\n        onDragEnd={onBoundsChanged}\n        onZoomChanged={onBoundsChanged}\n      >\n        {center.zoom <= MAX_ZOOM_FOR_HIGHLIGHTED_REGION &&\n          center.zoom >= MIN_ZOOM_FOR_HIGHLIGHTED_REGION && (\n            <HighlightedPolygon />\n          )}\n        {center.zoom >= MIN_ZOOM_FOR_BUILDINGS && <BuildingPolygons />}\n      </GoogleMap>\n    );\n  };\n\n  if (loadError) {\n    return <div>Failed loading the map. Please try again later.</div>;\n  }\n\n  return isLoaded ? renderMap() : <div>Loading...</div>;\n}\n\nexport default React.memo(Map);\n","import { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function useMapCenter() {\n  const { lat = 56.94, lng = 24.097, zoom = 15 } = useParams();\n  const data = useMemo(\n    () => ({\n      lat: parseFloat(lat),\n      lng: parseFloat(lng),\n      zoom: parseInt(zoom, 10),\n    }),\n    [lat, lng, zoom],\n  );\n\n  return data;\n}\n","import Map from './Map';\n\nexport default Map;\n","import Map from 'components/Map';\nimport styles from './SplitPaneRight.module.css';\n\nfunction SplitPaneRight() {\n  return (\n    <div className={styles.container}>\n      <Map />\n    </div>\n  );\n}\n\nexport default SplitPaneRight;\n","import SplitPaneRight from './SplitPaneRight';\n\nexport default SplitPaneRight;\n","import { useQuery } from '@apollo/client';\n\nconst suspend = (promise) => {\n  let status = 'pending';\n  let response;\n\n  const suspender = promise.then(\n    (res) => {\n      status = 'success';\n      response = res;\n    },\n    (err) => {\n      status = 'error';\n      response = err;\n    },\n  );\n\n  const read = () => {\n    switch (status) {\n      case 'pending':\n        throw suspender;\n      case 'error':\n        throw response;\n      default:\n        return response;\n    }\n  };\n  const result = { read };\n\n  return result;\n};\n\nexport default function useSuspendableQuery(...args) {\n  const result = useQuery(...args);\n  if (result.loading) {\n    suspend(new Promise((resolve) => !result.loading && resolve())).read();\n  }\n  return result;\n}\n","import { gql } from '@apollo/client';\nimport { useParams } from 'react-router-dom';\nimport useSuspendableQuery from 'hooks/use-suspended-query';\n\nconst GET_SINGLE_BUILDING = gql`\n  query($id: Int!) {\n    buildings(id: $id) {\n      id\n      bounds\n      properties {\n        results {\n          category\n          type\n          rent_type\n          price\n          price_per_sqm\n          rooms\n          area\n          floor\n          published_at\n        }\n      }\n    }\n  }\n`;\n\nexport default function useActiveBuilding() {\n  const { buildingId } = useParams();\n  const { data } = useSuspendableQuery(GET_SINGLE_BUILDING, {\n    variables: { id: Number(buildingId) },\n  });\n  return (data?.buildings || [])[0];\n}\n","import PropType from 'prop-types';\nimport { Grid, Statistic } from 'semantic-ui-react';\n\nfunction calcAvg(nums) {\n  return nums.reduce((carry, num) => carry + num, 0) / nums.length;\n}\n\nexport default function BuildingStats(props) {\n  const min = {\n    total: Math.min(...props.prices.total),\n    sqm: Math.min(...props.prices.sqm),\n  };\n  const avg = {\n    total: parseInt(calcAvg(props.prices.total), 10),\n    sqm: parseInt(calcAvg(props.prices.sqm), 10),\n  };\n  const max = {\n    total: Math.max(...props.prices.total),\n    sqm: Math.max(...props.prices.sqm),\n  };\n\n  return (\n    <Grid columns={3} textAlign=\"center\" divided>\n      <Grid.Row>\n        <Grid.Column>\n          <Statistic size=\"small\">\n            <Statistic.Label>Min</Statistic.Label>\n            <Statistic.Value>\n              {min.total.toLocaleString()}\n              <small>€</small>\n            </Statistic.Value>\n            <Statistic.Label>\n              ({min.sqm.toLocaleString()}{' '}\n              <small>\n                €/m<sup>2</sup>\n              </small>\n              )\n            </Statistic.Label>\n          </Statistic>\n        </Grid.Column>\n\n        <Grid.Column>\n          <Statistic size=\"small\">\n            <Statistic.Label>Average</Statistic.Label>\n            <Statistic.Value>\n              {avg.total.toLocaleString()}\n              <small>€</small>\n            </Statistic.Value>\n            <Statistic.Label>\n              ({avg.sqm.toLocaleString()}{' '}\n              <small>\n                €/m<sup>2</sup>\n              </small>\n              )\n            </Statistic.Label>\n          </Statistic>\n        </Grid.Column>\n\n        <Grid.Column>\n          <Statistic size=\"small\">\n            <Statistic.Label>Max</Statistic.Label>\n            <Statistic.Value>\n              {max.total.toLocaleString()}\n              <small>€</small>\n            </Statistic.Value>\n            <Statistic.Label>\n              ({max.sqm.toLocaleString()}{' '}\n              <small>\n                €/m<sup>2</sup>\n              </small>\n              )\n            </Statistic.Label>\n          </Statistic>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nBuildingStats.propTypes = {\n  prices: PropType.shape({\n    total: PropType.arrayOf(PropType.number).isRequired,\n    sqm: PropType.arrayOf(PropType.number).isRequired,\n  }).isRequired,\n};\n","import { push } from 'connected-react-router';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useFilters, usePagination, useTable, useSortBy } from 'react-table';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Pagination, Table } from 'semantic-ui-react';\nimport moment from 'moment';\nimport { querystringParamSelector } from 'store/selectors';\nimport BuildingStats from './BuildingStats';\nimport styles from './BuildingTable.module.css';\n\nconst RENT_TYPE_SUFFIX = {\n  yearly: '/y',\n  monthly: '/m',\n  weekly: '/w',\n  daily: '/d',\n  hourly: '/h',\n};\n\nconst columns = [\n  {\n    Header: 'Category',\n    accessor: 'category',\n    filter: 'equals',\n  },\n  {\n    Header: 'Type',\n    accessor: 'type',\n    filter: 'equals',\n  },\n  {\n    accessor: 'rent_type',\n    filter: 'equals',\n  },\n  {\n    Header: 'Total price',\n    Cell: ({ row: { original } }) => (\n      <>\n        {original.price.toLocaleString()} €\n        {original.type === 'rent' && RENT_TYPE_SUFFIX[original.rent_type]}\n      </>\n    ),\n    accessor: 'price',\n  },\n  {\n    Header: 'SQM Price',\n    Cell: ({ value }) => {\n      if (!value) {\n        return null;\n      }\n\n      return (\n        <>\n          {Math.round(value).toLocaleString()} €/m\n          <sup>2</sup>\n        </>\n      );\n    },\n    accessor: 'price_per_sqm',\n  },\n  {\n    Header: 'Area',\n    Cell: ({ value }) => {\n      if (!value) {\n        return null;\n      }\n\n      return (\n        <>\n          {value.toLocaleString()} m<sup>2</sup>\n        </>\n      );\n    },\n    accessor: 'area',\n  },\n  {\n    Header: 'Rooms',\n    accessor: 'rooms',\n  },\n  {\n    Header: 'Published at',\n    Cell: ({ value }) =>\n      value ? moment(value).format('YYYY-MM-DD HH:mm') : 'Before 2018',\n    accessor: 'published_at',\n  },\n];\n\nfunction getCellTextAlign(cell) {\n  if (['category', 'type'].includes(cell.column.id)) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction usePageSize() {\n  const dispatch = useDispatch();\n\n  const initialPageIndex = useSelector(querystringParamSelector('page')) || 1;\n  const updatePageIndex = useCallback(\n    (event, { activePage }) => {\n      dispatch(push('?page=' + activePage));\n    },\n    [dispatch],\n  );\n\n  return [parseInt(initialPageIndex, 10) - 1, updatePageIndex];\n}\n\nexport default function BuildingTable(props) {\n  const [initialPageIndex, updatePageIndex] = usePageSize();\n  const {\n    setFilter,\n    headerGroups,\n    rows,\n    page,\n    prepareRow,\n\n    // Pagination\n    pageCount,\n    gotoPage,\n    state: { pageIndex },\n  } = useTable(\n    {\n      columns,\n      data: props.building.properties.results,\n      initialState: {\n        sortBy: [\n          {\n            id: 'published_at',\n            desc: true,\n          },\n        ],\n        pageSize: 15,\n        pageIndex: initialPageIndex,\n        hiddenColumns: ['rent_type'],\n      },\n    },\n    useFilters,\n    useSortBy,\n    usePagination,\n  );\n\n  const onPageChange = useCallback(\n    (event, data) => {\n      gotoPage(data.activePage - 1);\n      updatePageIndex(event, data);\n    },\n    [gotoPage, updatePageIndex],\n  );\n\n  useEffect(() => {\n    Object.entries(props.filters).forEach(([id, value]) =>\n      setFilter(id, value),\n    );\n  }, [props.filters, setFilter, props.building]);\n\n  const prices = useMemo(\n    () => ({\n      total: rows\n        .map(({ original }) => original.price)\n        .filter((price) => price > 0),\n      sqm: rows\n        .map(({ original }) => original.price_per_sqm)\n        .filter((price) => price > 0),\n    }),\n    [rows],\n  );\n\n  const hasResults = page.length > 0;\n\n  return (\n    <>\n      {hasResults && (\n        <div className={styles.stats}>\n          <BuildingStats prices={prices} />\n        </div>\n      )}\n      <Table singleLine={hasResults} sortable>\n        <Table.Header>\n          {headerGroups.map((headerGroup) => (\n            <Table.Row\n              textAlign=\"center\"\n              {...headerGroup.getHeaderGroupProps()}\n            >\n              {headerGroup.headers.map((column) => (\n                <Table.HeaderCell\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  sorted={\n                    column.isSorted\n                      ? column.isSortedDesc\n                        ? 'descending'\n                        : 'ascending'\n                      : null\n                  }\n                >\n                  {column.render('Header')}\n                </Table.HeaderCell>\n              ))}\n            </Table.Row>\n          ))}\n        </Table.Header>\n\n        <Table.Body>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <Table.Row {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <Table.Cell\n                    textAlign={getCellTextAlign(cell)}\n                    {...cell.getCellProps()}\n                  >\n                    {cell.render('Cell')}\n                  </Table.Cell>\n                ))}\n              </Table.Row>\n            );\n          })}\n          {!hasResults && (\n            <Table.Row>\n              <Table.Cell colSpan={columns.length} textAlign=\"center\">\n                <p>\n                  <strong>\n                    No classifieds could be found with the given filters.\n                  </strong>{' '}\n                  Clear the filters or open a different property to see data.\n                </p>\n              </Table.Cell>\n            </Table.Row>\n          )}\n        </Table.Body>\n\n        {pageCount > 1 && (\n          <Table.Footer>\n            <Table.Row>\n              <Table.HeaderCell colSpan={columns.length}>\n                <Pagination\n                  activePage={pageIndex + 1}\n                  boundaryRange={1}\n                  onPageChange={onPageChange}\n                  size=\"mini\"\n                  siblingRange={2}\n                  totalPages={pageCount}\n                />\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        )}\n      </Table>\n    </>\n  );\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport { Dropdown, Menu } from 'semantic-ui-react';\n\nconst categoryOptions = [\n  { value: 'apartment', text: 'Apartment' },\n  { value: 'house', text: 'House' },\n  { value: 'office', text: 'Office' },\n];\nconst typeOptions = [\n  { value: 'sell', text: 'Sell' },\n  { value: 'rent', text: 'Rent' },\n  { value: 'auction', text: 'Auction' },\n];\nconst rentTypeOptions = [\n  { value: 'yearly', text: 'Yearly' },\n  { value: 'monthly', text: 'Monthly' },\n  { value: 'weekly', text: 'Weekly' },\n  { value: 'daily', text: 'Daily' },\n];\n\nexport default function BuildingToolbar({ onChange }) {\n  const [category, setCategory] = useState();\n  const [type, setType] = useState();\n  const [rentType, setRentType] = useState();\n  const filters = useMemo(\n    () => ({\n      category: category || undefined,\n      type: type || undefined,\n      rent_type: type === 'rent' ? rentType || undefined : undefined,\n    }),\n    [category, type, rentType],\n  );\n\n  useEffect(() => {\n    onChange(filters);\n  }, [onChange, filters]);\n\n  return (\n    <>\n      <Menu.Item fitted>\n        <Dropdown\n          placeholder=\"Select category\"\n          clearable\n          selection\n          value={category}\n          options={categoryOptions}\n          onChange={(event, data) => setCategory(data.value)}\n        />\n      </Menu.Item>\n      <Menu.Item fitted>\n        <Dropdown\n          placeholder=\"Select type\"\n          clearable\n          selection\n          value={type}\n          options={typeOptions}\n          onChange={(event, data) => setType(data.value)}\n        />\n      </Menu.Item>\n      {type === 'rent' && (\n        <Menu.Item fitted>\n          <Dropdown\n            placeholder=\"Select rent type\"\n            clearable\n            selection\n            fluid\n            value={rentType}\n            options={rentTypeOptions}\n            onChange={(event, data) => setRentType(data.value)}\n          />\n        </Menu.Item>\n      )}\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, Menu, Message } from 'semantic-ui-react';\nimport { returnToHomeClicked } from 'store/actions';\nimport BuildingToolbar from './BuildingToolbar';\n\nexport default function Header(props) {\n  const dispatch = useDispatch();\n  const onReturnClick = useCallback(() => dispatch(returnToHomeClicked()), [\n    dispatch,\n  ]);\n\n  return (\n    <>\n      <Menu secondary>\n        <Menu.Item fitted>\n          <Button\n            content=\"Return\"\n            icon=\"left arrow\"\n            labelPosition=\"left\"\n            onClick={onReturnClick}\n          />\n        </Menu.Item>\n\n        <BuildingToolbar onChange={props.onFiltersChange} />\n      </Menu>\n\n      <Message info>\n        <p>\n          Data might be inaccurate. Some people provide wrong locations for\n          their classifieds.\n        </p>\n      </Message>\n    </>\n  );\n}\n\nHeader.propTypes = {\n  onFiltersChange: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport Skeleton from 'react-loading-skeleton';\nimport { Dimmer, Loader, Message, Segment } from 'semantic-ui-react';\nimport useActiveBuilding from 'hooks/api/use-active-building';\nimport BuildingTable from './components/BuildingTable';\nimport Header from './components/Header';\n\nfunction Body(props) {\n  const activeBuilding = useActiveBuilding();\n\n  if (!activeBuilding) {\n    return (\n      <Message warning>\n        <Message.Header>Building not found</Message.Header>\n        <p>We could not locate a building here. Try again later.</p>\n      </Message>\n    );\n  }\n\n  return <BuildingTable building={activeBuilding} {...props} />;\n}\n\nexport default function BuildingContainer() {\n  const [filters, setFilters] = useState({});\n\n  return (\n    <>\n      <Header onFiltersChange={setFilters} />\n      <ErrorBoundary\n        fallback={\n          <Message negative>\n            An unexpected error occured when attempting to fetch the data. Try\n            again later.\n          </Message>\n        }\n      >\n        <React.Suspense\n          fallback={\n            <Segment basic>\n              <Dimmer inverted active>\n                <Loader content=\"Loading the building data..\" />\n              </Dimmer>\n              <Skeleton count={20} />\n            </Segment>\n          }\n        >\n          <Body filters={filters} />\n        </React.Suspense>\n      </ErrorBoundary>\n    </>\n  );\n}\n","import Building from './Building';\n\nexport default Building;\n","import Bugsnag from '@bugsnag/js';\nimport BugsnagPluginReact from '@bugsnag/plugin-react';\n\nBugsnag.start({\n  releaseStage: process.env.NODE_ENV,\n  enabledReleaseStages: ['production'],\n  apiKey: process.env.REACT_APP_BUGSNAG_KEY,\n  plugins: [new BugsnagPluginReact()],\n  collectUserIp: false,\n});\n\nexport default Bugsnag;\n","import { riga } from '@brokalys/location-json-schemas';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dropdown, Menu } from 'semantic-ui-react';\nimport { transliterate } from 'transliteration';\nimport { setNeighborhoodFilters, setSelectedNeighborhood } from 'store/actions';\nimport {\n  neighborhoodFilterSelector,\n  selectedNeighborhoodSelector,\n} from 'store/selectors';\nimport styles from './FilterToolbar.module.css';\n\nconst locationOptions = riga.features.map((row) => ({\n  value: row.properties.id,\n  text: row.properties.name,\n}));\n\nconst categoryOptions = [\n  { value: 'apartment', text: 'Apartment' },\n  { value: 'house', text: 'House' },\n  { value: 'land', text: 'Land' },\n];\nconst typeOptions = [\n  { value: 'sell', text: 'Sell' },\n  { value: 'rent', text: 'Rent' },\n];\nconst priceTypeOptions = [\n  { value: 'total', text: 'Total price' },\n  { value: 'sqm', text: 'Price/sqm' },\n];\n\nfunction FilterToolbar() {\n  const dispatch = useDispatch();\n  const { category, type, price } = useSelector(neighborhoodFilterSelector);\n  const { id: neighborhood } = useSelector(selectedNeighborhoodSelector);\n\n  /**\n   * Improved search operation to ignore all UTF-8 characters.\n   */\n  function onSearch(all, selected) {\n    const regexp = new RegExp(\n      transliterate(selected).replace(/[^a-z\\s-]/gi, ''),\n      'i',\n    );\n    return all.filter((row) => regexp.test(transliterate(row.text)));\n  }\n\n  return (\n    <div className={styles.container}>\n      <Menu secondary>\n        <Menu.Item fitted>\n          <Dropdown\n            placeholder=\"Select location\"\n            search={onSearch}\n            selection\n            options={locationOptions}\n            value={neighborhood}\n            onChange={(event, data) =>\n              dispatch(setSelectedNeighborhood(data.value))\n            }\n          />\n        </Menu.Item>\n        <Menu.Item fitted>\n          <Dropdown\n            placeholder=\"Select category\"\n            fluid\n            selection\n            value={category}\n            options={categoryOptions}\n            onChange={(event, data) =>\n              dispatch(setNeighborhoodFilters({ category: data.value }))\n            }\n          />\n        </Menu.Item>\n        <Menu.Item fitted>\n          <Dropdown\n            placeholder=\"Select type\"\n            fluid\n            selection\n            value={type}\n            options={typeOptions}\n            onChange={(event, data) =>\n              dispatch(setNeighborhoodFilters({ type: data.value }))\n            }\n          />\n        </Menu.Item>\n\n        <Menu.Item fitted>\n          <Dropdown\n            placeholder=\"Select price type\"\n            fluid\n            selection\n            value={price}\n            options={priceTypeOptions}\n            onChange={(event, data) =>\n              dispatch(setNeighborhoodFilters({ price: data.value }))\n            }\n          />\n        </Menu.Item>\n      </Menu>\n    </div>\n  );\n}\n\nexport default FilterToolbar;\n","import FilterToolbar from './FilterToolbar';\n\nexport default FilterToolbar;\n","import { gql } from '@apollo/client';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport useSuspendableQuery from 'hooks/use-suspended-query';\nimport {\n  neighborhoodFilterSelector,\n  selectedNeighborhoodSelector,\n} from 'store/selectors';\n\nconst query = gql`\n  query($filters: String!) {\n    response(filters: $filters)\n      @rest(\n        type: \"PriceResults\"\n        method: \"GET\"\n        path: \"/stats/monthly?discard=0.1&filters={args.filters}\"\n      ) {\n      loadingResults\n      results {\n        count\n        start_datetime\n        end_datetime\n        price {\n          min\n          max\n          median\n          mean\n          mode\n        }\n        pricePerSqm {\n          min\n          max\n          median\n          mean\n          mode\n        }\n      }\n    }\n  }\n`;\nexport default function usePriceData({ type: typeOverride } = {}) {\n  const [pollInterval, setPollInterval] = useState(0);\n  const { category, type } = useSelector(neighborhoodFilterSelector);\n  const { id } = useSelector(selectedNeighborhoodSelector);\n\n  const filters = {\n    category,\n    type: typeOverride || type,\n    location_classificator: id,\n  };\n  const filterStr = encodeURIComponent(JSON.stringify(filters));\n\n  const { data } = useSuspendableQuery(query, {\n    variables: {\n      filters: filterStr,\n    },\n    pollInterval,\n  });\n  const { loadingResults } = data?.response || {};\n\n  useEffect(() => {\n    setPollInterval(() => {\n      if (loadingResults === 0) {\n        return 0;\n      }\n\n      if (loadingResults <= 2) {\n        return 1000;\n      }\n\n      return 3000;\n    });\n  }, [loadingResults]);\n\n  return data.response;\n}\n","import { area, curveMonotoneX } from 'd3-shape';\nimport { Defs } from '@nivo/core';\nimport React, { useMemo } from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { useSelector } from 'react-redux';\nimport { Dimmer, Loader, Message, Segment } from 'semantic-ui-react';\nimport moment from 'moment';\nimport { ResponsiveLine } from '@nivo/line';\nimport Bugsnag from 'bugsnag';\nimport { neighborhoodFilterSelector } from 'store/selectors';\nimport styles from './PropertyPriceChart.module.css';\nimport usePriceData from 'hooks/api/use-property-price-chart-data';\n\nfunction PropertyPriceChart() {\n  const { price: priceType } = useSelector(neighborhoodFilterSelector);\n  const { results } = usePriceData();\n\n  const data = useMemo(\n    () => [\n      {\n        id: 'Average Price',\n        data: results.map((row) => {\n          const prices = priceType === 'sqm' ? row.pricePerSqm : row.price;\n          return {\n            ...prices,\n\n            x: row.start_datetime.substr(0, 10),\n            y: prices.mean,\n          };\n        }),\n      },\n    ],\n    [results, priceType],\n  );\n\n  const maxPrice = data[0].data.reduce(\n    (carry, { max }) => (max > carry ? max : carry),\n    0,\n  );\n\n  function Price({ value }) {\n    return (\n      <span>\n        {Number(value).toLocaleString('en', {\n          minimumFractionDigits: 2,\n        })}{' '}\n        {priceType === 'sqm' ? (\n          <span>\n            EUR/m<sup>2</sup>\n          </span>\n        ) : (\n          'EUR'\n        )}\n      </span>\n    );\n  }\n\n  return (\n    <ResponsiveLine\n      data={data}\n      margin={{ top: 10, right: 10, bottom: 100, left: 50 }}\n      xScale={{\n        type: 'time',\n        format: '%Y-%m-%d',\n        precision: 'month',\n      }}\n      xFormat=\"time:%Y-%m-%d\"\n      yScale={{\n        type: 'linear',\n        stacked: false,\n        max: maxPrice * 1.05,\n      }}\n      sliceTooltip={({ slice }) => {\n        return (\n          <div className={styles.tooltip}>\n            {slice.points.map((point) => (\n              <div key={point.id}>\n                <div>\n                  <strong>{moment(point.data.x).format('YYYY-MM-DD')}</strong>\n                </div>\n                <div>\n                  <strong>Min:</strong> <Price value={point.data.min} />\n                </div>\n                <div>\n                  <strong>{point.serieId}:</strong>{' '}\n                  <Price value={point.data.yFormatted} />\n                </div>\n                <div>\n                  <strong>Max:</strong> <Price value={point.data.max} />\n                </div>\n                <hr />\n                <div>\n                  <strong>Mode:</strong> <Price value={point.data.mode} />\n                </div>\n                <div>\n                  <strong>Median:</strong> <Price value={point.data.median} />\n                </div>\n              </div>\n            ))}\n          </div>\n        );\n      }}\n      axisBottom={{\n        format: '%Y-%m',\n        tickValues: 'every 2 months',\n        tickRotation: -90,\n      }}\n      enablePoints={true}\n      curve=\"monotoneX\"\n      useMesh={true}\n      enableSlices=\"x\"\n      layers={[\n        'grid',\n        'markers',\n        'axes',\n        'areas',\n        'crosshair',\n        AreaLayer,\n        'lines',\n        'points',\n        'slices',\n        'mesh',\n        'legends',\n      ]}\n    />\n  );\n}\n\nfunction PropertyPriceChartContainer() {\n  return (\n    <Segment basic className={styles.container}>\n      <ErrorBoundary\n        fallback={\n          <Message negative>\n            Failed loading chart data. Please try again later.\n          </Message>\n        }\n        onError={Bugsnag.notify}\n      >\n        <React.Suspense\n          fallback={\n            <Dimmer inverted active>\n              <Loader />\n            </Dimmer>\n          }\n        >\n          <PropertyPriceChart />\n        </React.Suspense>\n      </ErrorBoundary>\n    </Segment>\n  );\n}\n\nfunction AreaLayer({ series, xScale, yScale, innerHeight }) {\n  const areaGenerator = area()\n    .x((d) => xScale(d.data.x))\n    .y0((d) => yScale(d.data.min))\n    .y1((d) => yScale(d.data.max))\n    .curve(curveMonotoneX);\n\n  return (\n    <>\n      <Defs\n        defs={[\n          {\n            id: 'pattern',\n            type: 'patternLines',\n            background: 'transparent',\n            color: '#3daff7',\n            lineWidth: 1,\n            spacing: 6,\n            rotation: -45,\n          },\n        ]}\n      />\n      <path\n        d={areaGenerator(series[0].data)}\n        fill=\"url(#pattern)\"\n        fillOpacity={0.2}\n        stroke=\"#3daff7\"\n        strokeWidth={0.4}\n      />\n    </>\n  );\n}\n\nexport default PropertyPriceChartContainer;\n","import PropertyPriceChart from './PropertyPriceChart';\n\nexport default PropertyPriceChart;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Skeleton from 'react-loading-skeleton';\nimport { Icon, Popup, Statistic } from 'semantic-ui-react';\nimport usePriceData from 'hooks/api/use-property-price-mean-data';\nimport { neighborhoodFilterSelector } from 'store/selectors';\nimport styles from './MeanPriceInFilterLocation.module.css';\n\nfunction Description() {\n  return (\n    <>\n      <p>MoM: month-over-month</p>\n      <p>YoY: year-over-year</p>\n    </>\n  );\n}\n\nfunction MeanPriceInFilterLocation() {\n  const { price: priceType } = useSelector(neighborhoodFilterSelector);\n  const data = usePriceData();\n\n  const mean = data.price;\n  const momChange = data.change.mom;\n  const yoyChange = data.change.yoy;\n\n  return (\n    <>\n      <Statistic.Value>\n        <div className={styles.statisticAddon}>\n          {isFinite(momChange) && (\n            <div>\n              <span\n                className={momChange < 0 ? styles.textGreen : styles.textRed}\n              >\n                {momChange < 0 ? '+' : ''}\n                {-momChange.toFixed(2)}%\n              </span>{' '}\n              MoM\n            </div>\n          )}\n          {isFinite(yoyChange) && (\n            <div>\n              <span\n                className={yoyChange < 0 ? styles.textGreen : styles.textRed}\n              >\n                {yoyChange < 0 ? '+' : ''}\n                {-yoyChange.toFixed(2)}%\n              </span>{' '}\n              YoY\n            </div>\n          )}\n        </div>\n\n        {mean ? parseInt(mean, 10).toLocaleString('en') : '?'}\n      </Statistic.Value>\n      <Statistic.Label>\n        Average Price (EUR\n        {priceType === 'sqm' ? (\n          <span>\n            /m<sup>2</sup>\n          </span>\n        ) : (\n          ''\n        )}\n        ){' '}\n        <Popup\n          content={<Description />}\n          trigger={<Icon name=\"help circle\" />}\n        />\n      </Statistic.Label>\n    </>\n  );\n}\n\nfunction MeanPriceInFilterLocationContainer() {\n  return (\n    <Statistic>\n      <React.Suspense fallback={<Skeleton height={60} width={240} />}>\n        <MeanPriceInFilterLocation />\n      </React.Suspense>\n    </Statistic>\n  );\n}\n\nexport default MeanPriceInFilterLocationContainer;\n","import { useSelector } from 'react-redux';\nimport usePriceData from 'hooks/api/use-property-price-chart-data';\nimport { neighborhoodFilterSelector } from 'store/selectors';\n\nexport default function usePriceMeanData() {\n  const { price: priceType } = useSelector(neighborhoodFilterSelector);\n  const { loadingResults, results } = usePriceData();\n\n  // Still loading..\n  if (loadingResults > 0) {\n    return {\n      change: {},\n    };\n  }\n\n  const group = priceType === 'sqm' ? 'pricePerSqm' : 'price';\n\n  const {\n    [group]: { mean },\n  } = results[results.length - 1];\n\n  return {\n    price: mean,\n    change: {\n      mom: (1 - mean / results[results.length - 2][group].mean) * 100,\n      yoy: (1 - mean / results[results.length - 13][group].mean) * 100,\n    },\n  };\n}\n","import MeanPriceInFilterLocation from './MeanPriceInFilterLocation';\n\nexport default MeanPriceInFilterLocation;\n","import React from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport { Icon, Popup, Statistic } from 'semantic-ui-react';\nimport useRentalYield from 'hooks/api/use-rental-yield';\n\nfunction RentalYieldInFilterLocation() {\n  const data = useRentalYield();\n  const value = data ? `${data.toFixed(2)}%` : '?';\n\n  return <Statistic.Value>{value}</Statistic.Value>;\n}\n\nfunction Description() {\n  return (\n    <>\n      <p>\n        How much of the invested capital can I expect to make back each year?\n      </p>\n      <p>A bigger number is better for landlords; a smaller - for renters.</p>\n      <p>Calculation: average rent price / sell price in the last month</p>\n    </>\n  );\n}\n\nfunction RentalYieldInFilterLocationContainer() {\n  return (\n    <Statistic>\n      <React.Suspense fallback={<Skeleton height={42} />}>\n        <RentalYieldInFilterLocation />\n      </React.Suspense>\n      <Statistic.Label>\n        Rental Yield{' '}\n        <Popup\n          content={<Description />}\n          trigger={<Icon name=\"help circle\" />}\n        />\n      </Statistic.Label>\n    </Statistic>\n  );\n}\n\nexport default RentalYieldInFilterLocationContainer;\n","import { useSelector } from 'react-redux';\nimport usePriceData from 'hooks/api/use-property-price-chart-data';\nimport { neighborhoodFilterSelector } from 'store/selectors';\n\nexport default function useRentalYield() {\n  const { price: priceType } = useSelector(neighborhoodFilterSelector);\n  const { results: rentData } = usePriceData({ type: 'rent' });\n  const { results: sellData } = usePriceData({ type: 'sell' });\n\n  if (!rentData.length || !sellData.length) {\n    return 0;\n  }\n\n  const group = priceType === 'sqm' ? 'pricePerSqm' : 'price';\n\n  return (\n    (rentData[rentData.length - 1][group].mean /\n      sellData[sellData.length - 1][group].mean) *\n    100\n  );\n}\n","import RentalYieldInFilterLocation from './RentalYieldInFilterLocation';\n\nexport default RentalYieldInFilterLocation;\n","import Home from './Home';\n\nexport default Home;\n","import { riga } from '@brokalys/location-json-schemas';\nimport Bugsnag from 'bugsnag';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { useSelector } from 'react-redux';\nimport { Grid, Header, Message, Statistic } from 'semantic-ui-react';\nimport FilterToolbar from 'components/FilterToolbar';\nimport PropertyPriceChart from 'components/PropertyPriceChart';\nimport MeanPrice from 'components/Statistics/MeanPriceInFilterLocation';\nimport RentalYield from 'components/Statistics/RentalYieldInFilterLocation';\nimport { selectedNeighborhoodSelector } from 'store/selectors';\nimport styles from './Home.module.css';\n\nexport default function Home() {\n  const { id } = useSelector(selectedNeighborhoodSelector);\n  const locationName = riga.features.find((row) => row.properties.id === id)\n    .properties.name;\n\n  return (\n    <>\n      <div className={styles.content}>\n        <Header as=\"h2\">\n          Average Prices in{' '}\n          <span className={styles.highlightedText}>{locationName}</span>\n        </Header>\n\n        <FilterToolbar />\n        <PropertyPriceChart />\n\n        <Grid>\n          <Grid.Row>\n            <Grid.Column\n              tablet={16}\n              computer={16}\n              largeScreen={10}\n              widescreen={7}\n            >\n              <Header as=\"h3\">Last Month</Header>\n\n              <ErrorBoundary\n                fallback={\n                  <Message negative>\n                    Failed loading the data. Please try again later.\n                  </Message>\n                }\n                onError={Bugsnag.notify}\n              >\n                <Statistic.Group size=\"small\">\n                  <MeanPrice />\n                  <RentalYield />\n                </Statistic.Group>\n              </ErrorBoundary>\n            </Grid.Column>\n\n            <Grid.Column\n              tablet={16}\n              computer={16}\n              largeScreen={6}\n              widescreen={9}\n              verticalAlign=\"bottom\"\n              stretched\n            >\n              <Message\n                info\n                icon=\"info\"\n                header=\"Interested in a specific building?\"\n                content=\"Zoom in on the map and click on a building. This will show data about your selected property.\"\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport GithubCorner from 'react-github-corner';\nimport { Container, Grid } from 'semantic-ui-react';\nimport Navigation from 'components/Navigation';\nimport SplitPaneRight from 'containers/SplitPaneRight';\nimport Building from 'pages/Building';\nimport Home from 'pages/Home';\nimport styles from './App.module.css';\n\nfunction App(props) {\n  return (\n    <Container fluid className={styles.container}>\n      <GithubCorner\n        className={styles.githubCorner}\n        href=\"https://github.com/brokalys/map-app\"\n        direction=\"left\"\n      />\n\n      <Switch>\n        <Route\n          path={[\n            '/:lat,:lng,:zoom/building/:buildingId(\\\\d+)',\n            '/:lat,:lng,:zoom',\n            '/',\n          ]}\n        >\n          <Grid className={styles.grid}>\n            <Grid.Column computer={9} className={styles.leftPanel}>\n              <Navigation />\n\n              <Switch>\n                <Route path=\"/:lat,:lng,:zoom/building/:buildingId(\\d+)\">\n                  <Building />\n                </Route>\n\n                <Route path=\"*\">\n                  <Home />\n                </Route>\n              </Switch>\n            </Grid.Column>\n            <Grid.Column computer={7} className={styles.rightPanel}>\n              <SplitPaneRight />\n            </Grid.Column>\n          </Grid>\n        </Route>\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","import { MAP_PROJECTION_CHANGED } from '../actionTypes';\n\nconst initialState = {\n  bounds: {},\n};\n\nexport default function mapReducer(state = initialState, action) {\n  switch (action.type) {\n    case MAP_PROJECTION_CHANGED: {\n      const { payload: map } = action;\n      const bounds = {\n        nw: {\n          lat: map.getBounds().getSouthWest().lat(),\n          lng: map.getBounds().getNorthEast().lng(),\n        },\n        ne: {\n          lat: map.getBounds().getNorthEast().lat(),\n          lng: map.getBounds().getNorthEast().lng(),\n        },\n\n        sw: {\n          lat: map.getBounds().getSouthWest().lat(),\n          lng: map.getBounds().getSouthWest().lng(),\n        },\n        se: {\n          lat: map.getBounds().getNorthEast().lat(),\n          lng: map.getBounds().getSouthWest().lng(),\n        },\n      };\n\n      return {\n        ...state,\n        bounds,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_NEIGHBORHOOD_FILTERS,\n  SET_SELECTED_NEIGHBORHOOD,\n} from '../actionTypes';\n\nconst initialState = {\n  selected: 'latvia-riga-vecpilseta',\n  filters: {\n    category: 'apartment',\n    type: 'sell',\n    price: 'sqm',\n  },\n};\n\nexport default function neighborhoodReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_SELECTED_NEIGHBORHOOD: {\n      return {\n        ...state,\n        selected: action.payload,\n      };\n    }\n\n    case SET_NEIGHBORHOOD_FILTERS: {\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          ...action.payload,\n        },\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport map from './map';\nimport neighborhood from './neighborhood';\n\nconst createRootReducer = (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    map,\n    neighborhood,\n  });\n\nexport default createRootReducer;\n","import { put, select, takeLatest } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport { RETURN_TO_HOME_CLICKED } from 'store/actionTypes';\nimport { locationPathnameSelector } from 'store/selectors';\n\nfunction* goHome() {\n  const path = yield select(locationPathnameSelector);\n  const parts = path.split('/');\n\n  yield put(push(`/${parts[1]}`));\n}\n\nfunction* saga() {\n  yield takeLatest(RETURN_TO_HOME_CLICKED, goHome);\n}\n\nexport default saga;\n","import { put, select, takeEvery } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport { SET_SELECTED_NEIGHBORHOOD } from 'store/actionTypes';\nimport { selectedNeighborhoodSelector } from 'store/selectors';\n\nfunction getCenterCoords(arr) {\n  const coords = arr.reduce(\n    (x, y) => [x[0] + y[0] / arr.length, x[1] + y[1] / arr.length],\n    [0, 0],\n  );\n\n  return { lat: coords[1], lng: coords[0] };\n}\n\nfunction* setHighlightedRegion(action) {\n  const { region } = yield select(selectedNeighborhoodSelector);\n  const { lat, lng } = getCenterCoords(region[0]);\n  yield put(push(`/${lat},${lng},13`));\n}\n\nfunction* saga() {\n  yield takeEvery(SET_SELECTED_NEIGHBORHOOD, setHighlightedRegion);\n}\n\nexport default saga;\n","import { put, select, takeLatest } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport { CLICK_ON_BUILDING } from 'store/actionTypes';\nimport { locationPathnameSelector } from 'store/selectors';\n\nfunction* setActiveBuilding({ payload: buildingId }) {\n  const path = yield select(locationPathnameSelector);\n  const parts = path.split('/');\n  let url = `/${parts[1]}/building/${buildingId}`;\n\n  if (parts[2] === 'building' && parts[3] === String(buildingId)) {\n    url = `/${parts[1]}`;\n  }\n\n  yield put(push(url));\n}\n\nfunction* saga() {\n  yield takeLatest(CLICK_ON_BUILDING, setActiveBuilding);\n}\n\nexport default saga;\n","import { put, select, takeLatest } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport { MAP_BOUNDS_CHANGED } from 'store/actionTypes';\nimport {\n  locationPathnameSelector,\n  locationSearchSelector,\n} from 'store/selectors';\n\nfunction* setMapCenter({ payload: map }) {\n  const zoom = map.getZoom();\n  const currentPath = yield select(locationPathnameSelector);\n  const search = yield select(locationSearchSelector);\n  const parts = currentPath.split('/');\n\n  let newPath = `/${map.center.lat()},${map.center.lng()},${zoom}`;\n  if (parts[2] === 'building' && zoom > 14) {\n    newPath += `/building/${parts[3]}`;\n  }\n\n  if (newPath === currentPath) return;\n\n  yield put(push(newPath + search));\n}\n\nfunction* saga() {\n  yield takeLatest(MAP_BOUNDS_CHANGED, setMapCenter);\n}\n\nexport default saga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport { MAP_BOUNDS_CHANGED } from 'store/actionTypes';\nimport { mapProjectionChanged } from 'store/actions';\n\nfunction* updateMapBounds({ payload }) {\n  yield put(mapProjectionChanged(payload));\n}\n\nfunction* saga() {\n  yield takeLatest(MAP_BOUNDS_CHANGED, updateMapBounds);\n}\n\nexport default saga;\n","import { all } from 'redux-saga/effects';\nimport goHome from './go-home';\nimport mapCenterOnNeighborhood from './map-center-on-neighborhood';\nimport setActiveBuilding from './set-active-building';\nimport setMapCenter from './set-map-center';\nimport updateMapBounds from './update-map-bounds';\n\nexport default function* rootSaga() {\n  yield all([\n    goHome(),\n    mapCenterOnNeighborhood(),\n    setActiveBuilding(),\n    setMapCenter(),\n    updateMapBounds(),\n  ]);\n}\n","import { routerMiddleware } from 'connected-react-router';\nimport { createHashHistory } from 'history';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport createSagaMiddleware from 'redux-saga';\nimport createRootReducer from './reducers';\nimport rootSaga from './sagas';\n\nexport const history = createHashHistory({\n  hashType: 'slash',\n});\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default createStore(\n  createRootReducer(history),\n  composeWithDevTools(\n    applyMiddleware(routerMiddleware(history), sagaMiddleware),\n  ),\n);\n\nsagaMiddleware.run(rootSaga);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ConnectedRouter } from 'connected-react-router';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ApolloProvider } from '@apollo/client';\nimport client from './apollo-client';\nimport App from './App.jsx';\nimport Bugsnag from './bugsnag';\nimport store, { history } from './store';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\n\nconst ErrorBoundary = Bugsnag.getPlugin('react').createErrorBoundary(React);\n\nReactDOM.render(\n  <ErrorBoundary>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <ApolloProvider client={client}>\n          <App />\n        </ApolloProvider>\n      </ConnectedRouter>\n    </Provider>\n  </ErrorBoundary>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}