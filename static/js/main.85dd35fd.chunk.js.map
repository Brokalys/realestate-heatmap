{"version":3,"sources":["components/Statistics/MedianPriceInFilterLocation/MedianPriceInFilterLocation.module.css","App.module.css","containers/SplitPaneLeft/SplitPaneLeft.module.css","components/MapOverlay/components/AreaOverview.module.css","components/Navigation/Navigation.module.css","components/PropertyPriceChart/PropertyPriceChart.module.css","components/MapOverlay/components/PropertyPriceLine.module.css","components/MapOverlay/components/PropertyTypeChart.module.css","components/MapOverlay/MapOverlay.module.css","components/FilterToolbar/FilterToolbar.module.css","containers/SplitPaneRight/SplitPaneRight.module.css","apollo-client.js","bugsnag.js","store/state.js","store/selectors.js","components/FilterToolbar/FilterToolbar.jsx","components/FilterToolbar/index.js","components/Navigation/Navigation.jsx","components/Navigation/index.js","components/PropertyPriceChart/PropertyPriceChart.jsx","components/PropertyPriceChart/index.js","components/Statistics/MedianPriceInFilterLocation/MedianPriceInFilterLocation.jsx","components/Statistics/MedianPriceInFilterLocation/index.js","components/Statistics/RentalYieldInFilterLocation/RentalYieldInFilterLocation.jsx","components/Statistics/RentalYieldInFilterLocation/index.js","containers/SplitPaneLeft/SplitPaneLeft.jsx","containers/SplitPaneLeft/index.js","context/MapContext.js","components/Map/Map.jsx","components/Map/index.js","hooks/use-debounced-query.js","hooks/use-region-params.js","components/MapOverlay/components/AreaOverview.jsx","components/MapOverlay/components/PropertyPriceLine.jsx","components/MapOverlay/components/PropertyTypeChart.jsx","components/MapOverlay/MapOverlay.jsx","components/MapOverlay/index.js","containers/SplitPaneRight/SplitPaneRight.jsx","containers/SplitPaneRight/index.js","App.jsx","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["module","exports","client","ApolloClient","cache","InMemoryCache","link","HttpLink","uri","Bugsnag","start","releaseStage","process","enabledReleaseStages","apiKey","plugins","BugsnagPluginReact","collectUserIp","filterState","atom","key","default","category","type","location","getCategoryFilter","selector","get","getTypeFilter","getLocationFilter","getPrices","selectorFamily","a","axios","csvString","data","csv","parse","header","shift","locations","map","row","index","prices","price","end","value","parseInt","reduce","carry","getPricesInFilteredLocation","getMedianPriceLastMonth","allData","length","change","mom","yoy","getRentalYield","rentData","sellData","locationOptions","rigaGeojson","features","properties","name","text","categoryOptions","typeOptions","FilterToolbar","useRecoilState","setFilters","className","styles","container","Menu","secondary","Item","fitted","Dropdown","placeholder","search","all","selected","regexp","RegExp","transliterate","filter","test","selection","defaultValue","options","onChange","event","currentFilters","fluid","Navigation","Header","src","alt","height","position","Popup","content","inverted","trigger","href","target","rel","notificationLink","Icon","shake","Button","primary","animated","onClick","window","Content","visible","hidden","PropertyPriceChart","responseData","useRecoilValue","useMemo","id","x","y","margin","top","right","bottom","left","xScale","format","precision","xFormat","yScale","stacked","sliceTooltip","slice","tooltip","points","point","moment","serieId","Number","yFormatted","toLocaleString","minimumFractionDigits","axisBottom","tickValues","tickRotation","enablePoints","curve","useMesh","enableSlices","PropertyPriceChartContainer","Segment","basic","fallback","Message","negative","onError","notify","Suspense","Dimmer","active","Loader","MedianPriceInFilterLocation","median","momChange","yoyChange","statisticAddon","isFinite","textGreen","textRed","toFixed","MedianPriceInFilterLocationContainer","Statistic","Value","Label","RentalYieldInFilterLocation","RentalYieldInFilterLocationContainer","SplitPaneLeft","filters","as","highlightedText","Group","size","MapContext","React","createContext","GoogleMapReact","lazy","mapOptionsCreator","zoomControlOptions","ControlPosition","RIGHT_TOP","rotateControl","scaleControl","streetViewControl","panControl","fullscreenControl","Map","props","context","useContext","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","bounds","mapHeight","percentage","document","getElementById","offsetTop","newBounds","nw","ne","sw","se","setBounds","useDebouncedQuery","query","nextConfig","time","nextConfigStr","JSON","stringify","useState","debouncedIsLoading","setDebouncedLoading","undefined","previousData","setPreviousData","useDebounce","equalityFn","prev","next","config","useLazyQuery","performLazyQuery","loading","useDebouncedCallback","performDebouncedQuery","useEffect","useRegionParams","regionPolygon","feature","polygonsOverlapping","geometry","coordinates","region","AreaOverview","children","year","currency","amount","label","extendMoment","Moment","range","utc","startOf","subtract","Date","dates","Array","from","by","excludeEnd","transformResponse","date","summary","PropertyPriceLine","gql","toISOString","clone","endOf","variables","custom","colors","axisLeft","enable","tickSize","enableGridX","enableGridY","defaultColors","GET_MEDIAN_PRICE","normalizeChartData","land_count","count","house_count","apartment_count","PropertyTypeChart","startDate","setColors","title","layout","enableLabel","keys","indexBy","animate","padding","state","newColors","PriceLabel","MapOverlay","error","isLoading","Grid","Column","computer","convertBoundsToRegionString","join","SplitPaneRight","setMapState","mapState","Provider","App","Container","githubCorner","grid","leftPanel","rightPanel","Boolean","hostname","match","ErrorBoundary","getPlugin","createErrorBoundary","ReactDOM","render","ApolloProvider","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.85dd35fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticAddon\":\"MedianPriceInFilterLocation_statisticAddon__3nQOo\",\"textGreen\":\"MedianPriceInFilterLocation_textGreen__bthaA\",\"textRed\":\"MedianPriceInFilterLocation_textRed__3zWCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"grid\":\"App_grid__3DnSg\",\"leftPanel\":\"App_leftPanel__3Hl9k\",\"rightPanel\":\"App_rightPanel__kN-EW\",\"githubCorner\":\"App_githubCorner__3BLKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"SplitPaneLeft_content__4SUVj\",\"highlightedText\":\"SplitPaneLeft_highlightedText__2q005\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currency\":\"AreaOverview_currency__1aglq\",\"label\":\"AreaOverview_label__1Cauv\",\"amount\":\"AreaOverview_amount__KkYcy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shake\":\"Navigation_shake__1loJY\",\"bell-shake\":\"Navigation_bell-shake__28FvC\",\"notificationLink\":\"Navigation_notificationLink__dwBb-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PropertyPriceChart_container__b6m2Q\",\"tooltip\":\"PropertyPriceChart_tooltip__iGhsd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PropertyPriceLine_container__3NyhK\",\"tooltip\":\"PropertyPriceLine_tooltip__1tDKM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PropertyTypeChart_container__3smv6\",\"title\":\"PropertyTypeChart_title__1REaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MapOverlay_container__16kzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterToolbar_container__3xqZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SplitPaneRight_container__x3kzx\"};","import { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: 'https://api.brokalys.com',\n  }),\n});\n\nexport default client;\n","import Bugsnag from '@bugsnag/js';\nimport BugsnagPluginReact from '@bugsnag/plugin-react';\n\nBugsnag.start({\n  releaseStage: process.env.NODE_ENV,\n  enabledReleaseStages: ['production'],\n  apiKey: process.env.REACT_APP_BUGSNAG_KEY,\n  plugins: [new BugsnagPluginReact()],\n  collectUserIp: false,\n});\n\nexport default Bugsnag;\n","import { atom } from 'recoil';\n\nexport const filterState = atom({\n  key: 'filters',\n  default: {\n    category: 'apartment',\n    type: 'sell',\n    location: 'Centrs',\n  },\n});\n","import axios from 'axios';\nimport { selector, selectorFamily } from 'recoil';\nimport parse from 'csv-parse/lib/sync';\n\nimport { filterState } from './state';\n\nconst getCategoryFilter = selector({\n  key: 'filters.category',\n  get: ({ get }) => get(filterState).category,\n});\nconst getTypeFilter = selector({\n  key: 'filters.type',\n  get: ({ get }) => get(filterState).type,\n});\nconst getLocationFilter = selector({\n  key: 'filters.location',\n  get: ({ get }) => get(filterState).location,\n});\n\nexport const getPrices = selectorFamily({\n  key: 'getPrices',\n  get: ([category, type]) => async ({ get }) => {\n    const { data: csvString } = await axios.get(\n      `https://raw.githubusercontent.com/brokalys/data/master/data/${category}/${type}-monthly-riga.csv`\n    );\n\n    const csv = parse(csvString);\n    const header = csv.shift();\n    const [, , ...locations] = header;\n\n    return locations\n      .map((row, index) => ({\n        location: row,\n        prices: csv.map((price) => ({\n          start: price[0],\n          end: price[1],\n          value: parseInt(price[index + 2]),\n        })),\n      }))\n      .reduce((carry, row) => ({ ...carry, [row.location]: row.prices }), {});\n  },\n});\n\nexport const getPricesInFilteredLocation = selector({\n  key: 'priceInFilteredLocation',\n  get: async ({ get }) => {\n    const location = get(getLocationFilter);\n    const type = get(getTypeFilter);\n    const category = get(getCategoryFilter);\n    const data = await get(getPrices([category, type]));\n    return data[location];\n  },\n});\n\nexport const getMedianPriceLastMonth = selector({\n  key: 'medianPriceLastMonth',\n  get: async ({ get }) => {\n    const location = get(getLocationFilter);\n    const type = get(getTypeFilter);\n    const category = get(getCategoryFilter);\n    const allData = await get(getPrices([category, type]));\n    const data = allData[location];\n\n    const { value } = data[data.length - 1];\n\n    return {\n      price: value,\n      change: {\n        mom: (1 - value / data[data.length - 2].value) * 100,\n        yoy: (1 - value / data[data.length - 13].value) * 100,\n      },\n    };\n  },\n});\n\nexport const getRentalYield = selector({\n  key: 'rentalYield',\n  get: async ({ get }) => {\n    const category = get(getCategoryFilter);\n    const location = get(getLocationFilter);\n\n    const rentData = (await get(getPrices([category, 'rent'])))[location];\n    const sellData = (await get(getPrices([category, 'sell'])))[location];\n    return (\n      (rentData[rentData.length - 1].value /\n        sellData[sellData.length - 1].value) *\n      100\n    );\n  },\n});\n","import React from 'react';\nimport { useRecoilState } from 'recoil';\nimport { Dropdown, Menu } from 'semantic-ui-react';\nimport { transliterate } from 'transliteration';\n\nimport rigaGeojson from 'data/riga-geojson.json';\nimport { filterState } from 'store';\nimport styles from './FilterToolbar.module.css';\n\nconst locationOptions = rigaGeojson.features.map((row) => ({\n  value: row.properties.name,\n  text: row.properties.name,\n}));\n\nconst categoryOptions = [\n  { value: 'apartment', text: 'Apartment' },\n  { value: 'house', text: 'House' },\n  { value: 'land', text: 'Land' },\n];\nconst typeOptions = [\n  { value: 'sell', text: 'Sell' },\n  { value: 'rent', text: 'Rent' },\n];\n\nfunction FilterToolbar() {\n  const [, setFilters] = useRecoilState(filterState);\n\n  function onLocationChange(event, data) {\n    setFilters((currentFilters) => ({\n      ...currentFilters,\n      location: data.value,\n    }));\n  }\n\n  function onCategoryChange(event, data) {\n    setFilters((currentFilters) => ({\n      ...currentFilters,\n      category: data.value,\n    }));\n  }\n\n  function onTypeChange(event, data) {\n    setFilters((currentFilters) => ({\n      ...currentFilters,\n      type: data.value,\n    }));\n  }\n\n  /**\n   * Improved search operation to ignore all UTF-8 characters.\n   */\n  function onSearch(all, selected) {\n    const regexp = new RegExp(transliterate(selected), 'i');\n    return all.filter((row) => regexp.test(transliterate(row.text)));\n  }\n\n  return (\n    <div className={styles.container}>\n      <Menu secondary>\n        <Menu.Item fitted>\n          <Dropdown\n            placeholder=\"Select location\"\n            search={onSearch}\n            selection\n            defaultValue=\"Centrs\"\n            options={locationOptions}\n            onChange={onLocationChange}\n          />\n        </Menu.Item>\n        <Menu.Item fitted>\n          <Dropdown\n            placeholder=\"Select category\"\n            fluid\n            selection\n            defaultValue=\"apartment\"\n            options={categoryOptions}\n            onChange={onCategoryChange}\n          />\n        </Menu.Item>\n        <Menu.Item fitted>\n          <Dropdown\n            placeholder=\"Select type\"\n            fluid\n            selection\n            defaultValue=\"sell\"\n            options={typeOptions}\n            onChange={onTypeChange}\n          />\n        </Menu.Item>\n      </Menu>\n    </div>\n  );\n}\n\nexport default FilterToolbar;\n","import FilterToolbar from './FilterToolbar';\n\nexport default FilterToolbar;\n","import React from 'react';\nimport { Button, Icon, Menu, Popup } from 'semantic-ui-react';\n\nimport styles from './Navigation.module.css';\n\nfunction Navigation() {\n  function onFeedbackClick() {\n    window.location.href = 'mailto:matiss@brokalys.com?subject=Feedback';\n  }\n\n  return (\n    <Menu secondary>\n      <Menu.Header>\n        <img src=\"https://brokalys.com/favicon.png\" alt=\"logo\" height=\"40px\" />\n      </Menu.Header>\n\n      <Menu.Item position=\"right\">\n        <Popup\n          content=\"Sign up for instant notifications about classifieds matching your parameters\"\n          inverted\n          position=\"bottom right\"\n          trigger={\n            <a\n              href=\"https://pinger.brokalys.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className={styles.notificationLink}\n            >\n              <Icon name=\"bell outline\" className={styles.shake} />\n            </a>\n          }\n        />\n      </Menu.Item>\n\n      {/*<Menu.Item fitted>\n        <Button basic animated=\"vertical\">\n          <Button.Content visible>Compare</Button.Content>\n          <Button.Content hidden>\n            <Icon name=\"crosshairs\" />\n          </Button.Content>\n        </Button>\n      </Menu.Item>*/}\n\n      <Menu.Item fitted>\n        <Button primary animated=\"vertical\" onClick={onFeedbackClick}>\n          <Button.Content visible>Give feedback</Button.Content>\n          <Button.Content hidden>\n            <Icon name=\"mail\" />\n          </Button.Content>\n        </Button>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default Navigation;\n","import Navigation from './Navigation';\n\nexport default Navigation;\n","import React, { useMemo } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { Dimmer, Loader, Message, Segment } from 'semantic-ui-react';\nimport moment from 'moment';\nimport { ResponsiveLine } from '@nivo/line';\n\nimport Bugsnag from 'bugsnag';\nimport { getPricesInFilteredLocation } from 'store';\nimport styles from './PropertyPriceChart.module.css';\n\nfunction PropertyPriceChart() {\n  const responseData = useRecoilValue(getPricesInFilteredLocation);\n\n  const data = useMemo(\n    () => [\n      {\n        id: 'Median Price',\n        data: responseData.map((row) => ({\n          x: row.start,\n          y: row.value > 0 ? row.value : null,\n        })),\n      },\n    ],\n    [responseData]\n  );\n\n  return (\n    <ResponsiveLine\n      data={data}\n      margin={{ top: 10, right: 10, bottom: 100, left: 50 }}\n      xScale={{\n        type: 'time',\n        format: '%Y-%m-%d',\n        precision: 'month',\n      }}\n      xFormat=\"time:%Y-%m-%d\"\n      yScale={{\n        type: 'linear',\n        stacked: false,\n      }}\n      sliceTooltip={({ slice }) => {\n        return (\n          <div className={styles.tooltip}>\n            {slice.points.map((point) => (\n              <div key={point.id}>\n                <div>\n                  <strong>{moment(point.data.x).format('YYYY-MM-DD')}</strong>\n                </div>\n                <div>\n                  <strong>{point.serieId}:</strong>{' '}\n                  {Number(point.data.yFormatted).toLocaleString('en', {\n                    minimumFractionDigits: 2,\n                  })}{' '}\n                  EUR\n                </div>\n              </div>\n            ))}\n          </div>\n        );\n      }}\n      axisBottom={{\n        format: '%Y-%m',\n        tickValues: 'every 2 months',\n        tickRotation: -90,\n      }}\n      enablePoints={true}\n      curve=\"monotoneX\"\n      useMesh={true}\n      enableSlices=\"x\"\n    />\n  );\n}\n\nfunction PropertyPriceChartContainer() {\n  return (\n    <Segment basic className={styles.container}>\n      <ErrorBoundary\n        fallback={\n          <Message negative>\n            Failed loading chart data. Please try again later.\n          </Message>\n        }\n        onError={Bugsnag.notify}\n      >\n        <React.Suspense\n          fallback={\n            <Dimmer inverted active>\n              <Loader />\n            </Dimmer>\n          }\n        >\n          <PropertyPriceChart />\n        </React.Suspense>\n      </ErrorBoundary>\n    </Segment>\n  );\n}\n\nexport default PropertyPriceChartContainer;\n","import PropertyPriceChart from './PropertyPriceChart';\n\nexport default PropertyPriceChart;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport Skeleton from 'react-loading-skeleton';\nimport { Statistic } from 'semantic-ui-react';\n\nimport { getMedianPriceLastMonth } from 'store';\nimport styles from './MedianPriceInFilterLocation.module.css';\n\nfunction MedianPriceInFilterLocation() {\n  const data = useRecoilValue(getMedianPriceLastMonth);\n\n  const median = data.price;\n  const momChange = data.change.mom;\n  const yoyChange = data.change.yoy;\n\n  return (\n    <div>\n      <div className={styles.statisticAddon}>\n        {isFinite(momChange) && (\n          <div>\n            <span className={momChange < 0 ? styles.textGreen : styles.textRed}>\n              {momChange < 0 ? '+' : ''}\n              {-momChange.toFixed(2)}%\n            </span>{' '}\n            MoM\n          </div>\n        )}\n        {isFinite(yoyChange) && (\n          <div>\n            <span className={yoyChange < 0 ? styles.textGreen : styles.textRed}>\n              {yoyChange < 0 ? '+' : ''}\n              {-yoyChange.toFixed(2)}%\n            </span>{' '}\n            YoY\n          </div>\n        )}\n      </div>\n\n      {parseInt(median, 10).toLocaleString('en')}\n    </div>\n  );\n}\n\nfunction MedianPriceInFilterLocationContainer() {\n  return (\n    <Statistic>\n      <Statistic.Value>\n        <React.Suspense fallback={<Skeleton height={42} />}>\n          <MedianPriceInFilterLocation />\n        </React.Suspense>\n      </Statistic.Value>\n      <Statistic.Label>\n        Median Price (EUR/m<sup>2</sup>)\n      </Statistic.Label>\n    </Statistic>\n  );\n}\n\nexport default MedianPriceInFilterLocationContainer;\n","import MedianPriceInFilterLocation from './MedianPriceInFilterLocation';\n\nexport default MedianPriceInFilterLocation;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport Skeleton from 'react-loading-skeleton';\nimport { Statistic } from 'semantic-ui-react';\n\nimport { getRentalYield } from 'store';\n\nfunction RentalYieldInFilterLocation() {\n  const data = useRecoilValue(getRentalYield);\n\n  return <Statistic.Value>{data.toFixed(2)}%</Statistic.Value>;\n}\n\nfunction RentalYieldInFilterLocationContainer() {\n  return (\n    <Statistic>\n      <React.Suspense fallback={<Skeleton height={42} />}>\n        <RentalYieldInFilterLocation />\n      </React.Suspense>\n      <Statistic.Label>Rental Yield</Statistic.Label>\n    </Statistic>\n  );\n}\n\nexport default RentalYieldInFilterLocationContainer;\n","import RentalYieldInFilterLocation from './RentalYieldInFilterLocation';\n\nexport default RentalYieldInFilterLocation;\n","import React from 'react';\nimport { useRecoilState } from 'recoil';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { Header, Message, Statistic } from 'semantic-ui-react';\n\nimport Bugsnag from 'bugsnag';\nimport FilterToolbar from 'components/FilterToolbar';\nimport Navigation from 'components/Navigation';\nimport PropertyPriceChart from 'components/PropertyPriceChart';\nimport MedianPrice from 'components/Statistics/MedianPriceInFilterLocation';\nimport RentalYield from 'components/Statistics/RentalYieldInFilterLocation';\nimport { filterState } from 'store';\n\nimport styles from './SplitPaneLeft.module.css';\n\nfunction SplitPaneLeft() {\n  const [filters] = useRecoilState(filterState);\n\n  return (\n    <div className={styles.container}>\n      <Navigation />\n\n      <div className={styles.content}>\n        <Header as=\"h2\">\n          Median Prices in{' '}\n          <span className={styles.highlightedText}>{filters.location}</span>\n        </Header>\n\n        <FilterToolbar />\n        <PropertyPriceChart />\n\n        <div>\n          <Header as=\"h3\">Last Month</Header>\n\n          <ErrorBoundary\n            fallback={\n              <Message negative>\n                Failed loading the data. Please try again later.\n              </Message>\n            }\n            onError={Bugsnag.notify}\n          >\n            <Statistic.Group size=\"small\">\n              <MedianPrice />\n              <RentalYield />\n            </Statistic.Group>\n          </ErrorBoundary>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SplitPaneLeft;\n","import SplitPaneLeft from './SplitPaneLeft';\n\nexport default SplitPaneLeft;\n","import React from 'react';\n\nconst MapContext = React.createContext();\n\nexport default MapContext;\n","import React, { useContext } from 'react';\n\nimport MapContext from 'context/MapContext';\n\nconst GoogleMapReact = React.lazy(() => import('google-map-react'));\n\nfunction mapOptionsCreator(map) {\n  return {\n    zoomControlOptions: {\n      position: map.ControlPosition.RIGHT_TOP,\n    },\n    rotateControl: false,\n    scaleControl: false,\n    streetViewControl: false,\n    panControl: false,\n    fullscreenControl: false,\n  };\n}\n\nfunction Map(props) {\n  const context = useContext(MapContext);\n\n  /**\n   * Ignore the overlay when doing data lookups by region.\n   */\n  function onChange(map) {\n    const { bounds } = map;\n\n    const mapHeight = map.size.height;\n    const overlayHeight = document.getElementById('map-overlay').offsetTop;\n    const percentage = 1 - overlayHeight / mapHeight;\n\n    const newBounds = {\n      nw: bounds.nw,\n      ne: bounds.ne,\n\n      sw: {\n        lat: bounds.sw.lat + (bounds.nw.lat - bounds.sw.lat) * percentage,\n        lng: bounds.sw.lng,\n      },\n      se: {\n        lat: bounds.se.lat + (bounds.nw.lat - bounds.se.lat) * percentage,\n        lng: bounds.se.lng,\n      },\n    };\n\n    context.setBounds(newBounds);\n  }\n\n  return (\n    <React.Suspense fallback={<div>Loading...</div>}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAPS_KEY }}\n        defaultCenter={{\n          lat: 56.9032640496857,\n          lng: 24.09330663700942,\n        }}\n        defaultZoom={11}\n        options={mapOptionsCreator}\n        onChange={onChange}\n      />\n    </React.Suspense>\n  );\n}\n\nexport default Map;\n","import Map from './Map';\n\nexport default Map;\n","import { useEffect, useState } from 'react';\nimport { useDebounce, useDebouncedCallback } from 'use-debounce';\nimport { useLazyQuery } from '@apollo/client';\n\nexport default function useDebouncedQuery(query, nextConfig, time = 1000) {\n  const nextConfigStr = JSON.stringify(nextConfig);\n  const [debouncedIsLoading, setDebouncedLoading] = useState(true);\n  const [previousData, setPreviousData] = useState(undefined);\n  const [config] = useDebounce(nextConfig, time, {\n    equalityFn: (prev, next) => JSON.stringify(prev) === JSON.stringify(next),\n  });\n\n  const [performLazyQuery, { loading, data }] = useLazyQuery(query, config);\n  const [performDebouncedQuery] = useDebouncedCallback(() => {\n    performLazyQuery();\n  }, time);\n\n  useEffect(() => {\n    setDebouncedLoading(true);\n    performDebouncedQuery();\n  }, [nextConfigStr, performDebouncedQuery]);\n\n  useEffect(() => {\n    if (loading === false && data) {\n      setDebouncedLoading(false);\n      setPreviousData(data);\n    }\n  }, [loading]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return {\n    loading: loading || debouncedIsLoading,\n    data: data || previousData,\n  };\n}\n","import { useContext, useMemo } from 'react';\nimport polygonsOverlapping from 'polygon-overlap';\n\nimport MapContext from 'context/MapContext';\nimport rigaGeojson from 'data/riga-geojson.json';\n\nexport default function useRegionParams() {\n  const map = useContext(MapContext);\n  const regionPolygon = useMemo(() => {\n    return [\n      [map.bounds.nw.lng, map.bounds.nw.lat],\n      [map.bounds.ne.lng, map.bounds.ne.lat],\n      [map.bounds.sw.lng, map.bounds.sw.lat],\n      [map.bounds.se.lng, map.bounds.se.lat],\n    ];\n  }, [map.bounds]);\n\n  const locations = useMemo(() => {\n    return rigaGeojson.features\n      .filter((feature) =>\n        polygonsOverlapping(feature.geometry.coordinates[0], regionPolygon)\n      )\n      .map((feature) => `latvia-riga-${feature.properties.id}`);\n  }, [regionPolygon]);\n\n  return {\n    region: [map.region],\n    locations: locations.length > 10 ? undefined : locations,\n  };\n}\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nimport styles from './AreaOverview.module.css';\n\nfunction AreaOverview({ children, year }) {\n  return (\n    <div>\n      <Header as=\"h4\">Selected Area</Header>\n      <div>\n        <div className={styles.currency}>€</div>\n        <div className={styles.amount}>{children}</div>\n        <div className={styles.label}>Median Price last 30 days</div>\n      </div>\n    </div>\n  );\n}\n\nexport default AreaOverview;\n","import React, { useMemo } from 'react';\nimport { Dimmer, Loader, Segment } from 'semantic-ui-react';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport { gql } from '@apollo/client';\nimport { ResponsiveLine } from '@nivo/line';\n\nimport useDebouncedQuery from 'hooks/use-debounced-query';\nimport useRegionParams from 'hooks/use-region-params';\nimport styles from './PropertyPriceLine.module.css';\n\nconst moment = extendMoment(Moment);\nconst range = moment().range(\n  moment().utc().startOf('day').subtract(30, 'days'),\n  new Date()\n);\nconst dates = Array.from(range.by('day', { excludeEnd: true }));\n\nconst GET_MEDIAN_PRICE = (dates) => gql`\n  query(\n    $type: String!\n    $region: [String!]!\n    $locations: [String!]\n  ) {\n    ${dates.map(\n      (date, id) => `\n      row_${id}: properties(\n        filter: {\n          type: { eq: $type }\n          published_at: {\n            gte: \"${date.toISOString()}\"\n            lte: \"${date.clone().endOf('day').toISOString()}\"\n          }\n          location_classificator: { in: $locations }\n          region: { in: $region }\n        }\n      ) {\n        summary {\n          price {\n            median\n          }\n        }\n      }\n    `\n    )}\n  }\n`;\n\nfunction transformResponse(data) {\n  if (!data) {\n    return [];\n  }\n\n  return dates.map((date, index) => {\n    if (!data) {\n      return {};\n    }\n\n    return {\n      x: date.format('YYYY-MM-DD'),\n      y: data[`row_${index}`].summary.price.median,\n    };\n  });\n}\n\nfunction PropertyPriceLine({ type }) {\n  const { region, locations } = useRegionParams();\n  const { loading, data: custom } = useDebouncedQuery(\n    GET_MEDIAN_PRICE(dates),\n    {\n      variables: {\n        type,\n        region,\n        locations,\n      },\n    },\n    2000\n  );\n\n  const data = useMemo(\n    () => [\n      {\n        id: 'Median price',\n        data: transformResponse(custom),\n      },\n    ],\n    [custom]\n  );\n\n  return (\n    <Segment basic className={styles.container}>\n      <Dimmer inverted active={loading}>\n        <Loader />\n      </Dimmer>\n\n      <ResponsiveLine\n        data={data}\n        margin={{ top: 5, right: 5, bottom: 5, left: 5 }}\n        xScale={{\n          type: 'time',\n          format: '%Y-%m-%d',\n          precision: 'day',\n        }}\n        xFormat=\"time:%Y-%m-%d\"\n        yScale={{\n          type: 'linear',\n          stacked: false,\n        }}\n        sliceTooltip={({ slice }) => {\n          return (\n            <div className={styles.tooltip}>\n              {slice.points.map((point) => (\n                <div key={point.id}>\n                  <div>\n                    <strong>{moment(point.data.x).format('YYYY-MM-DD')}</strong>\n                  </div>\n                  <div>\n                    <strong>{point.serieId}:</strong>{' '}\n                    {Number(point.data.yFormatted).toLocaleString('en', {\n                      minimumFractionDigits: 2,\n                    })}{' '}\n                    EUR\n                  </div>\n                </div>\n              ))}\n            </div>\n          );\n        }}\n        colors={['#543193']}\n        axisLeft={{ enable: false, tickSize: 0 }}\n        axisBottom={false}\n        enableGridX={false}\n        enableGridY={false}\n        enablePoints={false}\n        curve=\"natural\"\n        useMesh={false}\n        enableSlices=\"x\"\n      />\n    </Segment>\n  );\n}\n\nexport default PropertyPriceLine;\n","import React, { useState } from 'react';\nimport { gql } from '@apollo/client';\nimport { Dimmer, Header, Loader, Segment } from 'semantic-ui-react';\nimport { ResponsiveBar } from '@nivo/bar';\n\nimport useDebouncedQuery from 'hooks/use-debounced-query';\nimport useRegionParams from 'hooks/use-region-params';\nimport styles from './PropertyTypeChart.module.css';\n\nconst defaultColor = '#543193';\nconst selectedColor = '#c0ace3';\nconst defaultColors = [defaultColor, defaultColor, defaultColor];\n\nconst GET_MEDIAN_PRICE = gql`\n  query(\n    $type: String!\n    $date: String!\n    $region: [String!]!\n    $locations: [String!]\n  ) {\n    median_price: properties(\n      filter: {\n        type: { eq: $type }\n        published_at: { gte: $date }\n        location_classificator: { in: $locations }\n        region: { in: $region }\n      }\n    ) {\n      summary {\n        price {\n          median\n        }\n      }\n    }\n\n    apartment_count: properties(\n      filter: {\n        category: { eq: \"APARTMENT\" }\n        type: { eq: $type }\n        published_at: { gte: $date }\n        location_classificator: { in: $locations }\n        region: { in: $region }\n      }\n    ) {\n      summary {\n        count\n      }\n    }\n\n    house_count: properties(\n      filter: {\n        category: { eq: \"HOUSE\" }\n        type: { eq: $type }\n        published_at: { gte: $date }\n        location_classificator: { in: $locations }\n        region: { in: $region }\n      }\n    ) {\n      summary {\n        count\n      }\n    }\n\n    land_count: properties(\n      filter: {\n        category: { eq: \"LAND\" }\n        type: { eq: $type }\n        published_at: { gte: $date }\n        location_classificator: { in: $locations }\n        region: { in: $region }\n      }\n    ) {\n      summary {\n        count\n      }\n    }\n  }\n`;\n\nfunction normalizeChartData(data) {\n  return [\n    {\n      category: 'Land',\n      value: data ? data.land_count.summary.count : 0,\n    },\n    {\n      category: 'House',\n      value: data ? data.house_count.summary.count : 0,\n    },\n    {\n      category: 'Apartment',\n      value: data ? data.apartment_count.summary.count : 0,\n    },\n  ];\n}\n\nfunction PropertyTypeChart({ type, startDate }) {\n  const { region, locations } = useRegionParams();\n\n  const { loading, data } = useDebouncedQuery(\n    GET_MEDIAN_PRICE,\n    {\n      variables: {\n        type,\n        date: startDate,\n        region,\n        locations,\n      },\n    },\n    1000\n  );\n  const [colors, setColors] = useState(defaultColors);\n\n  function onClick({ index }) {\n    setColors((state) => {\n      if (state[index] === selectedColor) {\n        return defaultColors;\n      }\n\n      const newColors = [...defaultColors];\n      newColors[index] = selectedColor;\n      return newColors;\n    });\n  }\n\n  return (\n    <div>\n      <Header as=\"h4\" className={styles.title}>\n        Property type distribution\n      </Header>\n      <Segment basic className={styles.container}>\n        <Dimmer inverted active={loading}>\n          <Loader />\n        </Dimmer>\n\n        <ResponsiveBar\n          data={normalizeChartData(data)}\n          layout=\"horizontal\"\n          enableGridY={false}\n          enableLabel={false}\n          axisLeft={{ tickSize: 0 }}\n          axisBottom={false}\n          keys={['value']}\n          indexBy=\"category\"\n          margin={{ top: 0, right: 0, bottom: 0, left: 60 }}\n          animate={true}\n          colors={colors}\n          padding={0.4}\n          onClick={onClick}\n        />\n      </Segment>\n    </div>\n  );\n}\n\nexport default PropertyTypeChart;\n","import React, { useState } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport { gql } from '@apollo/client';\nimport { Grid, Header } from 'semantic-ui-react';\nimport moment from 'moment';\n\nimport useDebouncedQuery from 'hooks/use-debounced-query';\nimport useRegionParams from 'hooks/use-region-params';\nimport AreaOverview from './components/AreaOverview';\nimport PropertyPriceLine from './components/PropertyPriceLine';\nimport PropertyTypeChart from './components/PropertyTypeChart';\n\nimport styles from './MapOverlay.module.css';\n\nconst GET_MEDIAN_PRICE = gql`\n  query(\n    $type: String!\n    $date: String!\n    $region: [String!]!\n    $locations: [String!]\n  ) {\n    properties(\n      filter: {\n        type: { eq: $type }\n        published_at: { gte: $date }\n        location_classificator: { in: $locations }\n        region: { in: $region }\n      }\n    ) {\n      summary {\n        price {\n          median\n        }\n      }\n    }\n  }\n`;\n\nfunction PriceLabel({ price }) {\n  if (!price) {\n    return 'Unknown';\n  }\n\n  return parseInt(price, 10).toLocaleString('en');\n}\n\nfunction MapOverlay() {\n  const { region, locations } = useRegionParams();\n  const [startDate] = useState(\n    moment().subtract(30, 'days').format('YYYY-MM-DD')\n  );\n  const [type] = useState('sell'); // @todo: dynamic\n  const { loading, error, data } = useDebouncedQuery(\n    GET_MEDIAN_PRICE,\n    {\n      variables: {\n        type: type,\n        date: startDate,\n        region,\n        locations,\n      },\n    },\n    1000\n  );\n\n  const isLoading = loading || !data;\n\n  if (error) {\n    return (\n      <div className={styles.container}>\n        <Header as=\"h4\">\n          An unexpected error occured when attempting to fetch the data. Try\n          again later.\n        </Header>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.container} id=\"map-overlay\">\n      <Grid>\n        <Grid.Column computer={8}>\n          <AreaOverview>\n            {isLoading ? (\n              <Skeleton />\n            ) : (\n              <PriceLabel price={data.properties.summary.price.median} />\n            )}\n          </AreaOverview>\n\n          <PropertyPriceLine type={type} />\n        </Grid.Column>\n        <Grid.Column computer={8}>\n          <PropertyTypeChart type={type} startDate={startDate} />\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nexport default MapOverlay;\n","import MapOverlay from './MapOverlay';\n\nexport default MapOverlay;\n","import React, { useState } from 'react';\n\nimport Map from 'components/Map';\nimport MapOverlay from 'components/MapOverlay';\nimport MapContext from 'context/MapContext';\n\nimport styles from './SplitPaneRight.module.css';\n\nfunction convertBoundsToRegionString(bounds) {\n  const parts = [\n    [bounds.ne.lat, bounds.ne.lng].join(' '),\n    [bounds.nw.lat, bounds.nw.lng].join(' '),\n    [bounds.se.lat, bounds.se.lng].join(' '),\n    [bounds.sw.lat, bounds.sw.lng].join(' '),\n    [bounds.ne.lat, bounds.ne.lng].join(' '),\n  ];\n  return parts.join(', ');\n}\n\nfunction SplitPaneRight() {\n  const [mapState, setMapState] = useState({\n    setBounds,\n    bounds: {\n      ne: {},\n      nw: {},\n      se: {},\n      sw: {},\n    },\n    region: '',\n  });\n\n  function setBounds(bounds) {\n    setMapState((state) => ({\n      ...state,\n      bounds,\n      region: convertBoundsToRegionString(bounds),\n    }));\n  }\n\n  return (\n    <div className={styles.container}>\n      <MapContext.Provider value={mapState}>\n        <Map />\n        <MapOverlay />\n      </MapContext.Provider>\n    </div>\n  );\n}\n\nexport default SplitPaneRight;\n","import SplitPaneRight from './SplitPaneRight';\n\nexport default SplitPaneRight;\n","import React from 'react';\nimport GithubCorner from 'react-github-corner';\nimport { Container, Grid } from 'semantic-ui-react';\n\nimport SplitPaneLeft from 'containers/SplitPaneLeft';\nimport SplitPaneRight from 'containers/SplitPaneRight';\n\nimport styles from './App.module.css';\n\nfunction App(props) {\n  return (\n    <Container fluid className={styles.container}>\n      <GithubCorner\n        className={styles.githubCorner}\n        href=\"https://github.com/brokalys/map-app\"\n      />\n\n      <Grid className={styles.grid}>\n        <Grid.Column computer={9} className={styles.leftPanel}>\n          <SplitPaneLeft />\n        </Grid.Column>\n        <Grid.Column computer={7} className={styles.rightPanel}>\n          <SplitPaneRight />\n        </Grid.Column>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\nimport { ApolloProvider } from '@apollo/client';\n\nimport client from './apollo-client';\nimport App from './App.jsx';\nimport Bugsnag from './bugsnag';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\n\nconst ErrorBoundary = Bugsnag.getPlugin('react').createErrorBoundary(React);\n\nReactDOM.render(\n  <ErrorBoundary>\n    <RecoilRoot>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </RecoilRoot>\n  </ErrorBoundary>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}